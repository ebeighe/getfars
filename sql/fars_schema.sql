
create table fars_route (
    route int primary key,
    name text
);
insert into fars_route values
    (1, 'Interstate'),
    (2, 'U.S. Highway'),
    (3, 'State Highway'),
    (4, 'County Road'),
    (5, 'Local Street – Township'),
    (6, 'Local Street – Municipality'),
    (7, 'Local Street – Frontage Road'),
    (8, 'Other'),
    (9, 'Unknown');

create table fars_functional_system (
    func_sys int primary key,
    name text
);
insert into fars_functional_system values
    (1, 'Interstate'),
    (2, 'Principal Arterial – Other Freeways and Expressways'),
    (3, 'Principal Arterial – Other'),
    (4, 'Minor Arterial'),
    (5, 'Major Collector'),
    (6, 'Minor Collector'),
    (7, 'Local'),
    (96, 'Trafficway Not in State Inventory'),
    (98, 'Not Reported'),
    (99, 'Unknown');

create table fars_road_owner (
    rd_owner int primary key,
    name text
);
insert into fars_road_owner values
    (1 , 'State Highway Agency'),
    (2 , 'County Highway Agency'),
    (3 , 'Town or Township Highway Agency'),
    (4 , 'City or Municipal Highway Agency'),
    (11, 'State Park, Forest or Reservation Agency'),
    (12, 'Local Park, Forest or Reservation Agency'),
    (21, 'Other State Agency'),
    (25, 'Other Local Agency'),
    (26, 'Private (other than Railroad)'),
    (27, 'Railroad'),
    (31, 'State Toll Road'),
    (32, 'Local Toll Authority'),
    (40, 'Other Public Instrumentality (i.e., Airport)'),
    (50, 'Indian Tribe Nation'),
    (60, 'Other Federal Agency'),
    (62, 'Bureau of Indian Affairs'),
    (63, 'Bureau of Fish and Wildlife'),
    (64, 'U.S. Forest Service'),
    (66, 'National Park Service'),
    (67, 'Tennessee Valley Authority'),
    (68, 'Bureau of Land Management'),
    (69, 'Bureau of Reclamation'),
    (70, 'Corps of Engineers'),
    (72, 'Air Force'),
    (74, 'Navy/Marines'),
    (80, 'Army'),
    (96, 'Trafficway Not in State Inventory'),
    (98, 'Not Reported'),
    (99, 'Unknown');

create table fars_special_jurisdiction (
    sp_jur int primary key,
    name text
);
insert into fars_special_jurisdiction values
    (0, 'No Special Jurisdiction (Includes National Forests)'),
    (1, 'National Park Service'),
    (2, 'Military'),
    (3, 'Indian Reservation'),
    (4, 'College/University Campus'),
    (5, 'Other Federal Properties'),
    (8, 'Other'),
    (9, 'Unknown');
create table fars_harmful_event (
    harm_ev int primary key,
    name text
);
insert into fars_harmful_event values
    (1, 'Rollover/Overturn'),
    (2, 'Fire/Explosion'),
    (3, 'Immersion (or Partial Immersion)'),
    (4, 'Gas Inhalation'),
    (5, 'Fell from Vehicle'),
    (6, 'Injured in Vehicle (Non-Collision)'),
    (7, 'Other Non-Collision'),
    (8, 'Pedestrian'),
    (9, 'Pedalcyclist'),
    (10, 'Railway Vehicle'),
    (11, 'Live Animal'),
    (12, 'Motor Vehicle in Transport'),
    (14, 'Parked Motor Vehicle (Not In Transport)'),
    (15, 'Non-Motorist on Personal Conveyance'),
    (16, 'Thrown or Falling Object'),
    (17, 'Boulder'),
    (18, 'Other Object (Not Fixed)'),
    (19, 'Building'),
    (20, 'Impact Attenuator/Crash Cushion'),
    (21, 'Bridge Pier or Support'),
    (23, 'Bridge Rail (Includes Parapet)'),
    (24, 'Guardrail Face'),
    (25, 'Concrete Traffic Barrier'),
    (26, 'Other Traffic Barrier'),
    (30, 'Utility Pole/Light Support'),
    (31, 'Post, Pole, or Other Supports'),
    (32, 'Culvert'),
    (33, 'Curb'),
    (34, 'Ditch'),
    (35, 'Embankment'),
    (38, 'Fence'),
    (39, 'Wall'),
    (40, 'Fire Hydrant'),
    (41, 'Shrubbery'),
    (42, 'Tree (Standing Only)'),
    (43, 'Other Fixed Object'),
    (44, 'Pavement Surface Irregularity (Ruts, Potholes, Grates, etc.)'),
    (45, 'Working Motor Vehicle'),
    (46, 'Traffic Signal Support'),
    (48, 'Snow Bank'),
    (49, 'Ridden Animal or Animal-Drawn Conveyance (Since 1998)'),
    (50, 'Bridge Overhead Structure'),
    (51, 'Jackknife (Harmful to This Vehicle)'),
    (52, 'Guardrail End'),
    (53, 'Mail Box'),
    (54, 'Motor Vehicle In-Transport Strikes or is Struck by Cargo, Persons or Objects Set-in-Motion from/by Another Motor Vehicle In-Transport'),
    (55, 'Motor Vehicle in Motion Outside the Trafficway'),
    (57, 'Cable Barrier'),
    (58, 'Ground'),
    (59, 'Traffic Sign Support'),
    (72, 'Cargo/Equipment Loss or Shift (Harmful to This Vehicle)'),
    (73, 'Object That Had Fallen From Motor Vehicle In-Transport'),
    (74, 'Road Vehicle on Rails'),
    (98, 'Not reported'),
    (99, 'Unknown');

create table fars_manner_of_collision (
    man_coll int primary key,
    name text
);

insert into fars_manner_of_collision values
    (0, 'Not Collision with Motor Vehicle in Transport'),
    (1, 'Front-to-Rear'),
    (2, 'Front-to-Front'),
    (6, 'Angle'),
    (7, 'Sideswipe – Same Direction'),
    (8, 'Sideswipe – Opposite Direction'),
    (9, 'Rear-to-Side'),
    (10, 'Rear-to-Rear'),
    (11, 'Other (End-Swipes and Others)'),
    (98, 'Not Reported'),
    (99, 'Unknown');

create table fars_light_condition (
    lgt_cond int primary key,
    name text
);

insert into fars_light_condition values
    (1, 'Daylight'),
    (2, 'Dark – Not Lighted'),
    (3, 'Dark – Lighted'),
    (4, 'Dawn'),
    (5, 'Dusk'),
    (6, 'Dark – Unknown Lighting'),
    (7, 'Other'),
    (8, 'Not Reported'),
    (9, 'Unknown');

create table fars_atmospheric_condition (
    weather int primary key,
    name text
);

insert into fars_atmospheric_condition values
    (1, 'Clear'),
    (0, 'No Additional Atmospheric Conditions'),
    (2, 'Rain'),
    (3, 'Sleet (Hail)'),
    (4, 'Snow'),
    (5, 'Fog, Smog, Smoke'),
    (6, 'Severe Crosswinds'),
    (7, 'Blowing Sand, Soil, Dirt'),
    (8, 'Other'),
    (10, 'Cloudy'),
    (11, 'Blowing Snow'),
    (12, 'Freezing Rain or Drizzle'),
    (98, 'Not Reported'),
    (99, 'Unknown');

create table fars_related_factors_crash (
    cf int primary key,
    name text
);

insert into fars_related_factors_crash values
    (0, 'None'),
    (1, 'Inadequate Warning of Exits, Lanes Narrowing, Traffic Controls etc.'),
    (2, 'Shoulder Related Design or Condition'),
    (3, 'Other Maintenance or Construction-Created Condition'),
    (4, 'No or Obscured Pavement Marking'),
    (5, 'Surface Under Water'),
    (6, 'Inadequate Construction or Poor Design of Roadway, Bridge, etc.'),
    (7, 'Surface Washed Out (Caved in, Road Slippage)'),
    (13, 'Aggressive Driving/Road Rage by Non-Contact Vehicle Driver'),
    (14, 'Motor Vehicle Struck By Falling Cargo or Something That Came Loose From or Something That Was Set in Motion By a Vehicle'),
    (15, 'Non-Occupant Struck By Falling Cargo, or Something Came Loose From or Something That Was Set In Motion By A Vehicle'),
    (16, 'Non-Occupant Struck Vehicle'),
    (17, 'Vehicle Set In Motion By Non-Driver'),
    (18, 'Date of Crash and Date of EMS Notification Were Not Same Day'),
    (19, 'Recent Previous Crash Scene Nearby'),
    (20, 'Police-Pursuit-Involved'),
    (21, 'Within Designated School Zone'),
    (22, 'Speed Limit Is a Statutory Limit as Recorded or Was Determined as This State’s "Basic Rule"'),
    (23, 'Indication of a Stalled/Disabled Vehicle'),
    (24, 'Unstabilized Situation Began and All Harmful Events Occurred Off of the Roadway'),
    (25, 'Toll Booth/Plaza Related'),
    (26, 'Backup Due to Prior Non-Recurring Incident'),
    (27, 'Backup Due to Prior Crash'),
    (28, 'Backup Due to Regular Congestion'),
    (99, 'Unknown');

create table fars_registered_vehicle_owner (
    owner int primary key,
    name text
);

insert into fars_registered_vehicle_owner values
    (0, 'Not Applicable, Vehicle Not Registered'),
    (1, 'Driver (of This Vehicle) Was Registered Owner'),
    (2, 'Driver (of This Vehicle) Not Registered Owner (Other Private Owner)'),
    (3, 'Vehicle Registered as Business/Company/Government Vehicle'),
    (4, 'Vehicle Registered as Rental Vehicle'),
    (5, 'Vehicle Was Stolen (Reported By Police)'),
    (6, 'Driverless/Motor Vehicle Parked/Stopped Off Roadway'),
    (9, 'Unknown');

create table fars_vehicle_make (
    make int primary key,
    name text
);
insert into fars_vehicle_make values
    (1, 'American Motors'),
    (2, 'Jeep/Kaiser-Jeep/Willys Jeep'),
    (3, 'AM General'),
    (6, 'Chrysler'),
    (7, 'Dodge'),
    (8, 'Imperial'),
    (9, 'Plymouth'),
    (10, 'Eagle'),
    (12, 'Ford'),
    (13, 'Lincoln'),
    (14, 'Mercury'),
    (18, 'Buick/Opel'),
    (19, 'Cadillac'),
    (20, 'Chevrolet'),
    (21, 'Oldsmobile'),
    (22, 'Pontiac'),
    (23, 'GMC'),
    (24, 'Saturn'),
    (25, 'Grumman'),
    (26, 'Coda'),
    (29, 'Other Domestic'),
    (30, 'Volkswagen'),
    (31, 'Alfa Romeo'),
    (32, 'Audi'),
    (33, 'Austin/Austin Healey'),
    (34, 'BMW'),
    (35, 'Datsun/Nissan'),
    (36, 'Fiat'),
    (37, 'Honda'),
    (38, 'Isuzu'),
    (39, 'Jaguar'),
    (40, 'Lancia'),
    (41, 'Mazda'),
    (42, 'Mercedes-Benz'),
    (43, 'MG'),
    (44, 'Peugeot'),
    (45, 'Porsche'),
    (46, 'Renault'),
    (47, 'Saab'),
    (48, 'Subaru'),
    (49, 'Toyota'),
    (50, 'Triumph'),
    (51, 'Volvo'),
    (52, 'Mitsubishi'),
    (53, 'Suzuki'),
    (54, 'Acura'),
    (55, 'Hyundai'),
    (56, 'Merkur'),
    (57, 'Yugo'),
    (58, 'Infiniti'),
    (59, 'Lexus'),
    (60, 'Daihatsu'),
    (61, 'Sterling'),
    (62, 'Land Rover'),
    (63, 'Kia'),
    (64, 'Daewoo'),
    (65, 'Smart'),
    (67, 'Scion'),
    (69, 'Other Imports'),
    (70, 'BSA'),
    (71, 'Ducati'),
    (72, 'Harley-Davidson'),
    (73, 'Kawasaki'),
    (74, 'Moto Guzzi'),
    (75, 'Norton'),
    (76, 'Yamaha'),
    (77, 'Victory'),
    (78, 'Other Make Moped'),
    (79, 'Other Make Motored Cycle'),
    (80, 'Brockway'),
    (81, 'Diamond Reo/Reo'),
    (82, 'Freightliner'),
    (83, 'FWD'),
    (84, 'International Harvester/Navistar'),
    (85, 'Kenworth'),
    (86, 'Mack'),
    (87, 'Peterbilt'),
    (88, 'Iveco/Magirus'),
    (89, 'White/Autocar, White/GMC'),
    (90, 'Bluebird'),
    (91, 'Eagle Coach'),
    (92, 'Gillig'),
    (93, 'MCI'),
    (94, 'Thomas Built'),
    (97, 'Not Reported'),
    (98, 'Other Make'),
    (99, 'Unknown Make');

create table fars_body_type (
    body_typ int primary key,
    name text
);
insert into fars_body_type values
    (1, 'Convertible (Excludes Sunroof, T-Bar)'),
    (2, '2-Door Sedan/Hardtop/Coupe'),
    (3, '3-Door/2-Door Hatchback'),
    (4, '4-Door Sedan/Hardtop'),
    (5, '5-Door/4-Door Hatchback'),
    (6, 'Station Wagon (Excluding Van and Truck-Based)'),
    (7, 'Hatchback, Number of Doors Unknown'),
    (8, 'Sedan/Hardtop, Number of Doors Unknown'),
    (9, 'Other or Unknown Automobile Type (Since 1994)'),
    (10, 'Auto-Based Pickup'),
    (11, 'Auto-Based Panel (Cargo Station Wagon, Auto-Based Ambulance or Hearse)'),
    (12, 'Large Limousine – More Than Four Side Doors or Stretch Chassis'),
    (13, 'Three-Wheel Automobile or Automobile Derivative'),
    (14, 'Compact Utility (ANSI D-16 Utility Vehicle Categories "Small" and "Midsize")'),
    (15, 'Large Utility (ANSI D-16 Utility Vehicle Categories "Full Size" and "Large")'),
    (16, 'Utility Station Wagon'),
    (17, '3-Door Coupe'),
    (19, 'Utility Unknown Body'),
    (20, 'Minivan'),
    (21, 'Large Van – Includes Van-Based Buses'),
    (22, 'Step Van or Walk-In Van'),
    (28, 'Other Van Type (Hi-Cube Van)'),
    (29, 'Unknown Van Type'),
    (30, 'Compact Pickup (Gross Vehicle Weight, GVWR, < 4,500 lbs)'),
    (31, 'Standard Pickup (4,500 lbs GVWR < 10,000 lbs)'),
    (32, 'Pickup with Slide-In Camper'),
    (33, 'Convertible Pickup'),
    (39, 'Unknown (Pickup Style) Light Conventional Truck Type'),
    (40, 'Cab Chassis-Based (Includes Light Stake, Light Dump, Light Tow, Rescue Vehicles)'),
    (41, 'Truck-Based Panel'),
    (42, 'Light-Truck-Based Motorhome (Chassis Mounted)'),
    (45, 'Other Light Conventional Truck Type (Includes Stretched Suburban Limousine)'),
    (48, 'Unknown Light Truck Type (Since 2013)'),
    (49, 'Unknown Light-Vehicle Type (Automobile, Utility Vehicle, Van or Light Truck) School Bus'),
    (50, 'Cross-Country/Intercity Bus (i.e., Greyhound)'),
    (51, 'Transit Bus (City Bus)'),
    (52, 'Van-Based Bus GVWR > 10,000 lbs. (Since 2011)'),
    (58, 'Other Bus Type'),
    (59, 'Unknown Bus Type'),
    (60, 'Step Van'),
    (61, 'Single-Unit Straight Truck or Cab-Chassis (10,000 lbs < GVWR <= 19,500 lbs)'),
    (62, 'Single-Unit Straight Truck or Cab-Chassis (19,500 lbs < GVWR <= 26,000 lbs)'),
    (63, 'Single-Unit Straight Truck or Cab-Chassis (GVWR > 26,000 lbs)'),
    (64, 'Single-Unit Straight Truck or Cab-Chassis (GVWR Unknown)'),
    (65, 'Medium/Heavy Truck-Based Motorhome'),
    (66, 'Truck/Tractor (Cab Only, or with Any Number of Trailing Units: Any Weight)'),
    (67, 'Medium/Heavy Pickup (GVWR > 10,000 lbs)'),
    (68, 'Single-Unit Straight Truck (GVWR Unknown)'),
    (71, 'Unknown if Single-Unit or Combination-Unit Medium Truck (10,000 lbs < GVWR < 26,000 lbs)'),
    (72, 'Unknown if Single-Unit or Combination-Unit Heavy Truck (GVWR > 26,000 lbs.)'),
    (73, 'Camper or Motorhome, Unknown Truck Type'),
    (78, 'Unknown Medium/Heavy Truck Type'),
    (79, 'Unknown Truck Type'),
    (80, 'Motorcycle'),
    (81, 'Moped (Motorized Bicycle)'),
    (82, 'Three-Wheel Motorcycle/Moped- Not All-Terrain Vehicle'),
    (83, 'Off-Road Motorcycle (2-Wheel) (Since 1993)'),
    (88, 'Other Motored Cycle Type (Mini-Bikes, Motor Scooters, Pocket Motorcycles, Pocket Bikes) (Since 2008)'),
    (89, 'Unknown Motored Cycle Type'),
    (90, 'ATV (All-Terrain Vehicle; Includes 3 or 4 Wheels)'),
    (91, 'Snowmobile'),
    (92, 'Farm Equipment Other Than Trucks'),
    (93, 'Construction Equipment Other Than Trucks (Includes Graders)'),
    (94, 'Low Speed Vehicle (LSV)/Neighborhood Electric Vehicle (NEV)'),
    (95, 'Golf Cart (Since 2012)'),
    (97, 'Other Vehicle Type (Includes Go-Cart, Fork-Lift, City Street Sweeper, Dune/Swamp Buggy)'),
    (98, 'Not Reported'),
    (99, 'Unknown Body Type');

-- todo: tow vehicle, vehicle configuration, cargo body type, 

create table fars_hazardous_material_class (
    haz_cno int primary key,
    name text
);
insert into fars_hazardous_material_class values
(0, 'Not Applicable'),
(1, 'Explosives'),
(2, 'Gases'),
(3, 'Flammable / Combustible Liquid'),
(4, 'Flammable Solid, Spontaneously Combustible, and Dangerous When Wet'),
(5, 'Oxidizer and Organic Peroxide'),
(6, 'Poison and Poison Inhalation Hazard'),
(7, 'Radioactive'),
(8, 'Corrosive'),
(9, 'Miscellaneous'),
(88, 'Not Reported');

CREATE TABLE fars_accident (
    state integer,
    st_case integer PRIMARY KEY,
    ve_total integer,
    ve_forms integer,
    pvh_invl integer,
    peds integer,
    pernotmvit integer,
    permvit integer,
    persons integer,
    county integer,
    city integer,
    day integer,
    month integer,
    year integer,
    day_week integer,
    hour integer,
    minute integer,
    nhs integer,
    rur_urb integer,
    func_sys integer foreign key references fars_functional_system (func_sys),
    rd_owner integer foreign key references fars_road_owner (rd_owner),
    route integer foreign key references fars_route (route),
    tway_id character varying,
    tway_id2 character varying,
    milept integer,
    latitude double precision,
    longitud double precision,
    sp_jur integer foreign key references fars_special_jurisdiction (sp_jur),
    harm_ev integer foreign key references harmful_event (harm_ev),
    man_coll integer foreign key references fars_manner_of_collision (man_coll),
    reljct1 integer,
    reljct2 integer,
    typ_int integer,
    wrk_zone integer,
    rel_road integer,
    lgt_cond integer foreign key references fars_light_condition (lgt_cond),
    weather1 integer foreign key references fars_atmospheric_condition (weather),
    weather2 integer foreign key references fars_atmospheric_condition (weather),
    weather integer foreign key references fars_atmospheric_condition (weather),
    sch_bus integer,
    rail character varying,
    not_hour integer,
    not_min integer,
    arr_hour integer,
    arr_min integer,
    hosp_hr integer,
    hosp_mn integer,
    cf1 integer foreign key references fars_related_factors_crash (cf),
    cf2 integer foreign key references fars_related_factors_crash (cf),
    cf3 integer foreign key references fars_related_factors_crash (cf),
    fatals integer,
    drunk_dr integer,
    the_geom geometry(Point)
);
CREATE INDEX fars_accident_wkb_geometry_geom_idx ON fars_accident USING gist (the_geom);

CREATE TABLE fars_cevent (
    state integer,
    st_case integer PRIMARY KEY,
    eventnum integer,
    vnumber1 integer,
    aoi1 integer,
    soe integer,
    vnumber2 integer,
    aoi2 integer
);

CREATE TABLE fars_damage (
    state integer,
    st_case integer,
    veh_no integer,
    mdareas integer,
    constraint primary key (st_case, veh_no)
);

CREATE TABLE fars_distract (
    state integer,
    st_case integer,
    veh_no integer,
    mdrdstrd integer,
    constraint primary key (st_case, veh_no)
);

CREATE TABLE fars_drimpair (
    state integer,
    st_case integer,
    veh_no integer,
    drimpair integer,
    constraint primary key (st_case, veh_no)
);

CREATE TABLE fars_factor (
    state integer,
    st_case integer,
    veh_no integer,
    mfactor integer,
    constraint primary key (st_case, veh_no)
);

CREATE TABLE fars_maneuver (
    state integer,
    st_case integer,
    veh_no integer,
    mdrmanav integer,
    constraint primary key (st_case, veh_no)
);

CREATE TABLE fars_nmcrash (
    state integer,
    st_case integer,
    veh_no integer,
    per_no integer,
    mtm_crsh integer,
    constraint primary key (st_case, veh_no)
);

CREATE TABLE fars_nmimpair (
    state integer,
    st_case integer,
    veh_no integer,
    per_no integer,
    nmimpair integer,
    constraint primary key (st_case, veh_no, per_no)
);

CREATE TABLE fars_nmprior (
    state integer,
    st_case integer,
    veh_no integer,
    per_no integer,
    mpr_act integer,
    constraint primary key (st_case, veh_no, per_no)
);

CREATE TABLE fars_parkwork (
    state integer,
    st_case integer,
    veh_no integer,
    pve_forms integer,
    pnumoccs integer,
    pday integer,
    pmonth integer,
    phour integer,
    pminute integer,
    pharm_ev integer,
    pman_coll integer foreign key references fars_manner_of_collision (man_coll),
    ptype integer,
    phit_run integer,
    preg_stat integer,
    powner integer foreign key references fars_vehicle_owner (owner),
    pmake integer foreign key references fars_vehicle_make (make),
    pmodel integer,
    pmak_mod integer,
    pbodytyp integer,
    pmodyear integer,
    pvin character varying,
    pvin_1 character varying,
    pvin_2 character varying,
    pvin_3 character varying,
    pvin_4 character varying,
    pvin_5 character varying,
    pvin_6 character varying,
    pvin_7 character varying,
    pvin_8 character varying,
    pvin_9 character varying,
    pvin_10 character varying,
    pvin_11 character varying,
    pvin_12 character varying,
    ptrailer integer,
    pmcarr_i1 integer,
    pmcarr_i2 character varying,
    pmcarr_id character varying,
    pgvwr integer,
    pv_config integer,
    pcargtyp integer,
    phaz_inv integer,
    phazplac integer,
    phaz_id integer,
    phaz_cno integer foreign key references fars_hazardous_material_class (haz_cno),
    phaz_rel integer,
    pbus_use integer,
    psp_use integer,
    pem_use integer,
    punderide integer,
    pimpact1 integer,
    pveh_sev integer,
    ptowed integer,
    pm_harm integer,
    pveh_sc1 integer,
    pveh_sc2 integer,
    pfire integer,
    pdeaths integer,
    ptrlr1vin character varying,
    ptrlr2vin character varying,
    ptrlr3vin bigint,
    constraint primary key (st_case, veh_no)
);

CREATE TABLE fars_pbtype (
    state integer,
    st_case integer,
    veh_no integer,
    per_no integer,
    pbptype integer,
    pbage integer,
    pbsex integer,
    pbcwalk integer,
    pbswalk integer,
    pbszone integer,
    pedctype integer,
    bikectype integer,
    pedloc integer,
    bikeloc integer,
    pedpos integer,
    bikepos integer,
    peddir integer,
    bikedir integer,
    motdir integer,
    motman integer,
    pedleg integer,
    pedsnr character varying,
    pedcgp integer,
    bikecgp integer,
    constraint primary key (st_case, veh_no, per_no)
);

CREATE TABLE fars_person (
    state integer,
    st_case integer,
    ve_forms integer,
    veh_no integer,
    per_no integer,
    str_veh integer,
    county integer,
    day integer,
    month integer,
    hour integer,
    minute integer,
    rur_urb integer,
    func_sys integer,
    harm_ev integer,
    man_coll integer,
    sch_bus integer,
    make integer,
    mak_mod integer,
    body_typ integer foreign key references fars_body_type (body_typ),
    mod_year integer,
    tow_veh integer,
    spec_use integer,
    emer_use integer,
    rollover integer,
    impact1 integer,
    fire_exp integer,
    age integer,
    sex integer,
    per_typ integer,
    inj_sev integer,
    seat_pos integer,
    rest_use integer,
    rest_mis integer,
    air_bag integer,
    ejection integer,
    ej_path integer,
    extricat integer,
    drinking integer,
    alc_det integer,
    alc_status integer,
    atst_typ integer,
    alc_res integer,
    drugs integer,
    drug_det integer,
    dstatus integer,
    drugtst1 integer,
    drugtst2 integer,
    drugtst3 integer,
    drugres1 integer,
    drugres2 integer,
    drugres3 integer,
    hospital integer,
    doa integer,
    death_da integer,
    death_mo integer,
    death_yr integer,
    death_hr integer,
    death_mn integer,
    death_tm integer,
    lag_hrs integer,
    lag_mins integer,
    p_sf1 integer,
    p_sf2 integer,
    p_sf3 integer,
    work_inj integer,
    hispanic integer,
    race integer,
    location integer,
    constraint primary key (st_case, veh_no, per_no)
);

CREATE TABLE fars_safetyeq (
    state integer,
    st_case integer,
    veh_no integer,
    per_no integer,
    msafeqmt integer,
    constraint primary key (st_case, veh_no, per_no)
);

CREATE TABLE fars_vehicle (
    state integer,
    st_case integer,
    veh_no integer,
    ve_forms integer,
    numoccs integer,
    day integer,
    month integer,
    hour integer,
    minute integer,
    harm_ev integer,
    man_coll integer,
    unittype integer,
    hit_run integer,
    reg_stat integer,
    owner integer foreign key references fars_registered_vehicle_owner (owner),
    make integer foreign key references fars_registered_vehicle_make (make),
    model integer,
    mak_mod integer,
    body_typ integer foreign key references fars_body_type (body_typ),
    mod_year integer,
    vin character varying,
    vin_1 character varying,
    vin_2 character varying,
    vin_3 character varying,
    vin_4 character varying,
    vin_5 character varying,
    vin_6 character varying,
    vin_7 character varying,
    vin_8 character varying,
    vin_9 character varying,
    vin_10 character varying,
    vin_11 character varying,
    vin_12 character varying,
    tow_veh integer,
    j_knife integer,
    mcarr_i1 integer,
    mcarr_i2 character varying,
    mcarr_id character varying,
    gvwr integer,
    v_config integer,
    cargo_bt integer,
    haz_inv integer,
    haz_plac integer,
    haz_id integer,
    haz_cno integer foreign key references fars_hazardous_material_class (haz_cno),
    haz_rel integer,
    bus_use integer,
    spec_use integer,
    emer_use integer,
    trav_sp integer,
    underide integer,
    rollover integer,
    rolinloc integer,
    impact1 integer,
    deformed integer,
    towed integer,
    m_harm integer,
    veh_sc1 integer,
    veh_sc2 integer,
    fire_exp integer,
    dr_pres integer,
    l_state integer,
    dr_zip integer,
    l_status integer,
    l_type integer,
    cdl_stat integer,
    l_endors integer,
    l_compl integer,
    l_restri integer,
    dr_hgt integer,
    dr_wgt integer,
    prev_acc integer,
    prev_sus integer,
    prev_dwi integer,
    prev_spd integer,
    prev_oth integer,
    first_mo integer,
    first_yr integer,
    last_mo integer,
    last_yr integer,
    speedrel integer,
    dr_sf1 integer,
    dr_sf2 integer,
    dr_sf3 integer,
    dr_sf4 integer,
    vtrafway integer,
    vnum_lan integer,
    vspd_lim integer,
    valign integer,
    vprofile integer,
    vpavetyp integer,
    vsurcond integer,
    vtrafcon integer,
    vtcont_f integer,
    p_crash1 integer,
    p_crash2 integer,
    p_crash3 integer,
    pcrash4 integer,
    pcrash5 integer,
    acc_type integer,
    trlr1vin character varying,
    trlr2vin character varying,
    trlr3vin double precision,
    deaths integer,
    dr_drink integer,
    constraint primary key (st_case, veh_no)
);

CREATE TABLE fars_vevent (
    state integer,
    st_case integer,
    eventnum integer,
    veh_no integer,
    veventnum integer,
    vnumber1 integer,
    aoi1 integer,
    soe integer,
    vnumber2 integer,
    aoi2 integer,
    constraint primary key (st_case, veh_no)
);

CREATE TABLE fars_vindecode (
    state integer,
    st_case integer,
    veh_no integer,
    ncicmake character varying,
    vinyear integer,
    vehtype character varying,
    vehtype_t character varying,
    vinmake_t character varying,
    vinmodel_t character varying,
    vintrim_t character varying,
    vintrim1_t character varying,
    vintrim2_t character varying,
    vintrim3_t character varying,
    vintrim4_t character varying,
    bodystyl character varying,
    bodystyl_t character varying,
    doors integer,
    wheels integer,
    drivwhls integer,
    mfg character varying,
    mfg_t character varying,
    displci integer,
    displcc integer,
    cylndrs character varying,
    cycles integer,
    fuel character varying,
    fuel_t character varying,
    fuelinj character varying,
    fuelinj_t character varying,
    carbtype character varying,
    carbtype_t character varying,
    carbbrls character varying,
    gvwrange integer,
    gvwrange_t character varying,
    whlbsh double precision,
    whlblg double precision,
    tiredesc_f character varying,
    psi_f integer,
    tiresz_f character varying,
    tiresz_f_t character varying,
    tiredesc_r character varying,
    psi_r integer,
    rearsize integer,
    rearsize_t character varying,
    tonrating character varying,
    shipweight integer,
    msrp integer,
    drivetyp character varying,
    drivetyp_t character varying,
    salectry character varying,
    salectry_t character varying,
    abs character varying,
    abs_t character varying,
    security character varying,
    security_t character varying,
    drl character varying,
    drl_t character varying,
    rstrnt character varying,
    rstrnt_t character varying,
    tkcab character varying,
    tkcab_t character varying,
    tkaxlef character varying,
    tkaxlef_t character varying,
    tkaxler character varying,
    tkaxler_t character varying,
    tkbrak character varying,
    tkbrak_t character varying,
    engmfg character varying,
    engmfg_t character varying,
    engmodel character varying,
    tkduty character varying,
    tkduty_t character varying,
    tkbedl character varying,
    tkbedl_t character varying,
    segmnt character varying,
    segmnt_t character varying,
    plant character varying,
    plntctry_t character varying,
    plntcity character varying,
    plntctry character varying,
    plntstat character varying,
    plntstat_t character varying,
    origin character varying,
    origin_t character varying,
    dispclmt double precision,
    blocktype character varying,
    enghead character varying,
    enghead_t character varying,
    vlvclndr integer,
    vlvtotal integer,
    engvincd character varying,
    incomplt boolean,
    battyp character varying,
    battyp_t character varying,
    batkwrtg integer,
    batvolt double precision,
    supchrgr boolean,
    supchrgr_t boolean,
    turbo character varying,
    turbo_t character varying,
    engvvt character varying,
    mcyusage character varying,
    mcyusage_t character varying,
    constraint primary key (st_case, veh_no)
);

CREATE TABLE fars_violatn (
    state integer,
    st_case integer,
    veh_no integer,
    mviolatn integer,
    constraint primary key (st_case, veh_no)
);

CREATE TABLE fars_vision (
    state integer,
    st_case integer,
    veh_no integer,
    mvisobsc integer,
    constraint primary key (st_case, veh_no)
);

CREATE TABLE fars_vsoe (
    state integer,
    st_case integer,
    veh_no integer,
    veventnum integer,
    soe integer,
    aoi integer,
    constraint primary key (st_case, veh_no)
);
