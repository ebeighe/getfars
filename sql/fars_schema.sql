CREATE SCHEMA IF NOT EXISTS fars;

create table fars.state (
    state int primary key,
    name text,
    fips char(2)
);
insert into fars.state values
    (1, 'Alabama', '01'),
    (2, 'Alaska', '02'),
    (3, 'American Samoa', '60'),
    (4, 'Arizona', '04'),
    (5, 'Arkansas', '05'),
    (6, 'California', '06'),
    (8, 'Colorado', '08'),
    (9, 'Connecticut', '09'),
    (10, 'Delaware', '10'),
    (11, 'District of Columbia', '11'),
    (12, 'Florida', '12'),
    (13, 'Georgia', '13'),
    (14, 'Guam', '66'),
    (15, 'Hawaii', '15'),
    (16, 'Idaho', '16'),
    (17, 'Illinois', '17'),
    (18, 'Indiana', '18'),
    (19, 'Iowa', '19'),
    (20, 'Kansas', '20'),
    (21, 'Kentucky', '21'),
    (22, 'Louisiana', '22'),
    (23, 'Maine', '23'),
    (24, 'Maryland', '24'),
    (25, 'Massachusetts', '25'),
    (26, 'Michigan', '26'),
    (27, 'Minnesota', '27'),
    (28, 'Mississippi', '28'),
    (29, 'Missouri', '29'),
    (30, 'Montana', '30'),
    (31, 'Nebraska', '31'),
    (32, 'Nevada', '32'),
    (33, 'New Hampshire', '33'),
    (34, 'New Jersey', '34'),
    (35, 'New Mexico', '35'),
    (36, 'New York', '36'),
    (37, 'North Carolina', '37'),
    (38, 'North Dakota', '38'),
    (39, 'Ohio', '39'),
    (40, 'Oklahoma', '40'),
    (41, 'Oregon', '41'),
    (42, 'Pennsylvania', '42'),
    (43, 'Puerto Rico', '72'),
    (44, 'Rhode Island', '44'),
    (45, 'South Carolina', '45'),
    (46, 'South Dakota', '46'),
    (47, 'Tennessee', '47'),
    (48, 'Texas', '48'),
    (49, 'Utah', '49'),
    (50, 'Vermont', '50'),
    (52, 'Virgin Islands', '78'),
    (51, 'Virginia', '51'),
    (53, 'Washington', '53'),
    (54, 'West Virginia', '54'),
    (55, 'Wisconsin', '55'),
    (56, 'Wyoming', '56'),
    (0, 'No Driver Present', null),
    (93, 'Indian Nation', null),
    (94, 'U.S. Government', null),
    (95, 'Canada', null),
    (96, 'Mexico', null),
    (97, 'Other Foreign Country', null),
    (98, 'Not reported', null),
    (99, 'Unknown', null);

create table fars.route (
    route int primary key,
    name text
);
insert into fars.route values
    (1, 'Interstate'),
    (2, 'U.S. Highway'),
    (3, 'State Highway'),
    (4, 'County Road'),
    (5, 'Local Street – Township'),
    (6, 'Local Street – Municipality'),
    (7, 'Local Street – Frontage Road'),
    (8, 'Other'),
    (9, 'Unknown');

create table fars.functional_system (
    func_sys int primary key,
    name text
);
insert into fars.functional_system values
    (1, 'Interstate'),
    (2, 'Principal Arterial – Other Freeways and Expressways'),
    (3, 'Principal Arterial – Other'),
    (4, 'Minor Arterial'),
    (5, 'Major Collector'),
    (6, 'Minor Collector'),
    (7, 'Local'),
    (96, 'Trafficway Not in State Inventory'),
    (98, 'Not Reported'),
    (99, 'Unknown');

create table fars.road_owner (
    rd_owner int primary key,
    name text
);
insert into fars.road_owner values
    (1 , 'State Highway Agency'),
    (2 , 'County Highway Agency'),
    (3 , 'Town or Township Highway Agency'),
    (4 , 'City or Municipal Highway Agency'),
    (11, 'State Park, Forest or Reservation Agency'),
    (12, 'Local Park, Forest or Reservation Agency'),
    (21, 'Other State Agency'),
    (25, 'Other Local Agency'),
    (26, 'Private (other than Railroad)'),
    (27, 'Railroad'),
    (31, 'State Toll Road'),
    (32, 'Local Toll Authority'),
    (40, 'Other Public Instrumentality (i.e., Airport)'),
    (50, 'Indian Tribe Nation'),
    (60, 'Other Federal Agency'),
    (62, 'Bureau of Indian Affairs'),
    (63, 'Bureau of Fish and Wildlife'),
    (64, 'U.S. Forest Service'),
    (66, 'National Park Service'),
    (67, 'Tennessee Valley Authority'),
    (68, 'Bureau of Land Management'),
    (69, 'Bureau of Reclamation'),
    (70, 'Corps of Engineers'),
    (72, 'Air Force'),
    (74, 'Navy/Marines'),
    (80, 'Army'),
    (96, 'Trafficway Not in State Inventory'),
    (98, 'Not Reported'),
    (99, 'Unknown');

create table fars.special_jurisdiction (
    sp_jur int primary key,
    name text
);
insert into fars.special_jurisdiction values
    (0, 'No Special Jurisdiction (Includes National Forests)'),
    (1, 'National Park Service'),
    (2, 'Military'),
    (3, 'Indian Reservation'),
    (4, 'College/University Campus'),
    (5, 'Other Federal Properties'),
    (8, 'Other'),
    (9, 'Unknown');

create table fars.harmful_event (
    harm_ev int primary key,
    name text
);
insert into fars.harmful_event values
    (1, 'Rollover/Overturn'),
    (2, 'Fire/Explosion'),
    (3, 'Immersion (or Partial Immersion)'),
    (4, 'Gas Inhalation'),
    (5, 'Fell from Vehicle'),
    (6, 'Injured in Vehicle (Non-Collision)'),
    (7, 'Other Non-Collision'),
    (8, 'Pedestrian'),
    (9, 'Pedalcyclist'),
    (10, 'Railway Vehicle'),
    (11, 'Live Animal'),
    (12, 'Motor Vehicle in Transport'),
    (14, 'Parked Motor Vehicle (Not In Transport)'),
    (15, 'Non-Motorist on Personal Conveyance'),
    (16, 'Thrown or Falling Object'),
    (17, 'Boulder'),
    (18, 'Other Object (Not Fixed)'),
    (19, 'Building'),
    (20, 'Impact Attenuator/Crash Cushion'),
    (21, 'Bridge Pier or Support'),
    (23, 'Bridge Rail (Includes Parapet)'),
    (24, 'Guardrail Face'),
    (25, 'Concrete Traffic Barrier'),
    (26, 'Other Traffic Barrier'),
    (30, 'Utility Pole/Light Support'),
    (31, 'Post, Pole, or Other Supports'),
    (32, 'Culvert'),
    (33, 'Curb'),
    (34, 'Ditch'),
    (35, 'Embankment'),
    (38, 'Fence'),
    (39, 'Wall'),
    (40, 'Fire Hydrant'),
    (41, 'Shrubbery'),
    (42, 'Tree (Standing Only)'),
    (43, 'Other Fixed Object'),
    (44, 'Pavement Surface Irregularity (Ruts, Potholes, Grates, etc.)'),
    (45, 'Working Motor Vehicle'),
    (46, 'Traffic Signal Support'),
    (48, 'Snow Bank'),
    (49, 'Ridden Animal or Animal-Drawn Conveyance'),
    (50, 'Bridge Overhead Structure'),
    (51, 'Jackknife (Harmful to This Vehicle)'),
    (52, 'Guardrail End'),
    (53, 'Mail Box'),
    (54, 'Motor Vehicle In-Transport Strikes or is Struck by Cargo, Persons or Objects Set-in-Motion from/by Another Motor Vehicle In-Transport'),
    (55, 'Motor Vehicle in Motion Outside the Trafficway'),
    (57, 'Cable Barrier'),
    (58, 'Ground'),
    (59, 'Traffic Sign Support'),
    (60, 'Cargo/Equipment Loss or Shift (Non-Harmful)'),
    (61, 'Equipment Failure (Blown Tire, Brake Failure, etc.)'),
    (62, 'Separation of Units'),
    (63, 'Ran Off Road – Right'),
    (64, 'Ran Off Road – Left'),
    (65, 'Cross Median'),
    (66, 'Downhill Runaway'),
    (67, 'Vehicle Went Airborne'),
    (68, 'Cross Centerline'),
    (69, 'Re-Entering Highway'),
    (70, 'Jackknife (Non-Harmful)'),
    (71, 'End Departure'),
    (72, 'Cargo/Equipment Loss or Shift (Harmful to This Vehicle)'),
    (73, 'Object That Had Fallen From Motor Vehicle In-Transport'),
    (74, 'Road Vehicle on Rails'),
    (79, 'Ran Off Roadway – Direction Unknown'),
    (98, 'Not reported'),
    (99, 'Unknown');

create table fars.manner_of_collision (
    man_coll int primary key,
    name text
);
insert into fars.manner_of_collision values
    (0, 'Not Collision with Motor Vehicle in Transport'),
    (1, 'Front-to-Rear'),
    (2, 'Front-to-Front'),
    (6, 'Angle'),
    (7, 'Sideswipe – Same Direction'),
    (8, 'Sideswipe – Opposite Direction'),
    (9, 'Rear-to-Side'),
    (10, 'Rear-to-Rear'),
    (11, 'Other (End-Swipes and Others)'),
    (98, 'Not Reported'),
    (99, 'Unknown');

create table fars.light_condition (
    lgt_cond int primary key,
    name text
);
insert into fars.light_condition values
    (1, 'Daylight'),
    (2, 'Dark – Not Lighted'),
    (3, 'Dark – Lighted'),
    (4, 'Dawn'),
    (5, 'Dusk'),
    (6, 'Dark – Unknown Lighting'),
    (7, 'Other'),
    (8, 'Not Reported'),
    (9, 'Unknown');

create table fars.atmospheric_condition (
    weather int primary key,
    name text
);
insert into fars.atmospheric_condition values
    (1, 'Clear'),
    (0, 'No Additional Atmospheric Conditions'),
    (2, 'Rain'),
    (3, 'Sleet (Hail)'),
    (4, 'Snow'),
    (5, 'Fog, Smog, Smoke'),
    (6, 'Severe Crosswinds'),
    (7, 'Blowing Sand, Soil, Dirt'),
    (8, 'Other'),
    (10, 'Cloudy'),
    (11, 'Blowing Snow'),
    (12, 'Freezing Rain or Drizzle'),
    (98, 'Not Reported'),
    (99, 'Unknown');

create table fars.related_factors_crash (
    cf int primary key,
    name text
);
insert into fars.related_factors_crash values
    (0, 'None'),
    (1, 'Inadequate Warning of Exits, Lanes Narrowing, Traffic Controls etc.'),
    (2, 'Shoulder Related Design or Condition'),
    (3, 'Other Maintenance or Construction-Created Condition'),
    (4, 'No or Obscured Pavement Marking'),
    (5, 'Surface Under Water'),
    (6, 'Inadequate Construction or Poor Design of Roadway, Bridge, etc.'),
    (7, 'Surface Washed Out (Caved in, Road Slippage)'),
    (13, 'Aggressive Driving/Road Rage by Non-Contact Vehicle Driver'),
    (14, 'Motor Vehicle Struck By Falling Cargo or Something That Came Loose From or Something That Was Set in Motion By a Vehicle'),
    (15, 'Non-Occupant Struck By Falling Cargo, or Something Came Loose From or Something That Was Set In Motion By A Vehicle'),
    (16, 'Non-Occupant Struck Vehicle'),
    (17, 'Vehicle Set In Motion By Non-Driver'),
    (18, 'Date of Crash and Date of EMS Notification Were Not Same Day'),
    (19, 'Recent Previous Crash Scene Nearby'),
    (20, 'Police-Pursuit-Involved'),
    (21, 'Within Designated School Zone'),
    (22, 'Speed Limit Is a Statutory Limit as Recorded or Was Determined as This State’s "Basic Rule"'),
    (23, 'Indication of a Stalled/Disabled Vehicle'),
    (24, 'Unstabilized Situation Began and All Harmful Events Occurred Off of the Roadway'),
    (25, 'Toll Booth/Plaza Related'),
    (26, 'Backup Due to Prior Non-Recurring Incident'),
    (27, 'Backup Due to Prior Crash'),
    (28, 'Backup Due to Regular Congestion'),
    (99, 'Unknown');

create table fars.vehicle_owner (
    owner int primary key,
    name text
);
insert into fars.vehicle_owner values
    (0, 'Not Applicable, Vehicle Not Registered'),
    (1, 'Driver (of This Vehicle) Was Registered Owner'),
    (2, 'Driver (of This Vehicle) Not Registered Owner (Other Private Owner)'),
    (3, 'Vehicle Registered as Business/Company/Government Vehicle'),
    (4, 'Vehicle Registered as Rental Vehicle'),
    (5, 'Vehicle Was Stolen (Reported By Police)'),
    (6, 'Driverless/Motor Vehicle Parked/Stopped Off Roadway'),
    (9, 'Unknown');

create table fars.vehicle_make (
    make int primary key,
    name text
);
insert into fars.vehicle_make values
    (1, 'American Motors'),
    (2, 'Jeep/Kaiser-Jeep/Willys Jeep'),
    (3, 'AM General'),
    (6, 'Chrysler'),
    (7, 'Dodge'),
    (8, 'Imperial'),
    (9, 'Plymouth'),
    (10, 'Eagle'),
    (12, 'Ford'),
    (13, 'Lincoln'),
    (14, 'Mercury'),
    (18, 'Buick/Opel'),
    (19, 'Cadillac'),
    (20, 'Chevrolet'),
    (21, 'Oldsmobile'),
    (22, 'Pontiac'),
    (23, 'GMC'),
    (24, 'Saturn'),
    (25, 'Grumman'),
    (26, 'Coda'),
    (29, 'Other Domestic'),
    (30, 'Volkswagen'),
    (31, 'Alfa Romeo'),
    (32, 'Audi'),
    (33, 'Austin/Austin Healey'),
    (34, 'BMW'),
    (35, 'Datsun/Nissan'),
    (36, 'Fiat'),
    (37, 'Honda'),
    (38, 'Isuzu'),
    (39, 'Jaguar'),
    (40, 'Lancia'),
    (41, 'Mazda'),
    (42, 'Mercedes-Benz'),
    (43, 'MG'),
    (44, 'Peugeot'),
    (45, 'Porsche'),
    (46, 'Renault'),
    (47, 'Saab'),
    (48, 'Subaru'),
    (49, 'Toyota'),
    (50, 'Triumph'),
    (51, 'Volvo'),
    (52, 'Mitsubishi'),
    (53, 'Suzuki'),
    (54, 'Acura'),
    (55, 'Hyundai'),
    (56, 'Merkur'),
    (57, 'Yugo'),
    (58, 'Infiniti'),
    (59, 'Lexus'),
    (60, 'Daihatsu'),
    (61, 'Sterling'),
    (62, 'Land Rover'),
    (63, 'Kia'),
    (64, 'Daewoo'),
    (65, 'Smart'),
    (67, 'Scion'),
    (69, 'Other Imports'),
    (70, 'BSA'),
    (71, 'Ducati'),
    (72, 'Harley-Davidson'),
    (73, 'Kawasaki'),
    (74, 'Moto Guzzi'),
    (75, 'Norton'),
    (76, 'Yamaha'),
    (77, 'Victory'),
    (78, 'Other Make Moped'),
    (79, 'Other Make Motored Cycle'),
    (80, 'Brockway'),
    (81, 'Diamond Reo/Reo'),
    (82, 'Freightliner'),
    (83, 'FWD'),
    (84, 'International Harvester/Navistar'),
    (85, 'Kenworth'),
    (86, 'Mack'),
    (87, 'Peterbilt'),
    (88, 'Iveco/Magirus'),
    (89, 'White/Autocar, White/GMC'),
    (90, 'Bluebird'),
    (91, 'Eagle Coach'),
    (92, 'Gillig'),
    (93, 'MCI'),
    (94, 'Thomas Built'),
    (97, 'Not Reported'),
    (98, 'Other Make'),
    (99, 'Unknown Make');

create table fars.body_type (
    body_typ int primary key,
    name text
);
insert into fars.body_type values
    (1, 'Convertible (Excludes Sunroof, T-Bar)'),
    (2, '2-Door Sedan/Hardtop/Coupe'),
    (3, '3-Door/2-Door Hatchback'),
    (4, '4-Door Sedan/Hardtop'),
    (5, '5-Door/4-Door Hatchback'),
    (6, 'Station Wagon (Excluding Van and Truck-Based)'),
    (7, 'Hatchback, Number of Doors Unknown'),
    (8, 'Sedan/Hardtop, Number of Doors Unknown'),
    (9, 'Other or Unknown Automobile Type'),
    (10, 'Auto-Based Pickup'),
    (11, 'Auto-Based Panel (Cargo Station Wagon, Auto-Based Ambulance or Hearse)'),
    (12, 'Large Limousine – More Than Four Side Doors or Stretch Chassis'),
    (13, 'Three-Wheel Automobile or Automobile Derivative'),
    (14, 'Compact Utility (ANSI D-16 Utility Vehicle Categories "Small" and "Midsize")'),
    (15, 'Large Utility (ANSI D-16 Utility Vehicle Categories "Full Size" and "Large")'),
    (16, 'Utility Station Wagon'),
    (17, '3-Door Coupe'),
    (19, 'Utility Unknown Body'),
    (20, 'Minivan'),
    (21, 'Large Van – Includes Van-Based Buses'),
    (22, 'Step Van or Walk-In Van'),
    (28, 'Other Van Type (Hi-Cube Van)'),
    (29, 'Unknown Van Type'),
    (30, 'Compact Pickup (Gross Vehicle Weight, GVWR, < 4,500 lbs)'),
    (31, 'Standard Pickup (4,500 lbs GVWR < 10,000 lbs)'),
    (32, 'Pickup with Slide-In Camper'),
    (33, 'Convertible Pickup'),
    (39, 'Unknown (Pickup Style) Light Conventional Truck Type'),
    (40, 'Cab Chassis-Based (Includes Light Stake, Light Dump, Light Tow, Rescue Vehicles)'),
    (41, 'Truck-Based Panel'),
    (42, 'Light-Truck-Based Motorhome (Chassis Mounted)'),
    (45, 'Other Light Conventional Truck Type (Includes Stretched Suburban Limousine)'),
    (48, 'Unknown Light Truck Type'),
    (49, 'Unknown Light-Vehicle Type (Automobile, Utility Vehicle, Van or Light Truck)'),
    (50, 'School Bus'),
    (51, 'Cross-Country/Intercity Bus (i.e., Greyhound)'),
    (52, 'Transit Bus (City Bus)'),
    (55, 'Van-Based Bus GVWR > 10,000 lbs.'),
    (58, 'Other Bus Type'),
    (59, 'Unknown Bus Type'),
    (60, 'Step Van'),
    (61, 'Single-Unit Straight Truck or Cab-Chassis (10,000 lbs < GVWR <= 19,500 lbs)'),
    (62, 'Single-Unit Straight Truck or Cab-Chassis (19,500 lbs < GVWR <= 26,000 lbs)'),
    (63, 'Single-Unit Straight Truck or Cab-Chassis (GVWR > 26,000 lbs)'),
    (64, 'Single-Unit Straight Truck or Cab-Chassis (GVWR Unknown)'),
    (65, 'Medium/Heavy Truck-Based Motorhome'),
    (66, 'Truck/Tractor (Cab Only, or with Any Number of Trailing Units: Any Weight)'),
    (67, 'Medium/Heavy Pickup (GVWR > 10,000 lbs)'),
    (68, 'Single-Unit Straight Truck (GVWR Unknown)'),
    (71, 'Unknown if Single-Unit or Combination-Unit Medium Truck (10,000 lbs < GVWR < 26,000 lbs)'),
    (72, 'Unknown if Single-Unit or Combination-Unit Heavy Truck (GVWR > 26,000 lbs.)'),
    (73, 'Camper or Motorhome, Unknown Truck Type'),
    (78, 'Unknown Medium/Heavy Truck Type'),
    (79, 'Unknown Truck Type'),
    (80, 'Motorcycle'),
    (81, 'Moped (Motorized Bicycle)'),
    (82, 'Three-Wheel Motorcycle/Moped- Not All-Terrain Vehicle'),
    (83, 'Off-Road Motorcycle (2-Wheel)'),
    (88, 'Other Motored Cycle Type (Mini-Bikes, Motor Scooters, Pocket Motorcycles, Pocket Bikes)'),
    (89, 'Unknown Motored Cycle Type'),
    (90, 'ATV (All-Terrain Vehicle; Includes 3 or 4 Wheels)'),
    (91, 'Snowmobile'),
    (92, 'Farm Equipment Other Than Trucks'),
    (93, 'Construction Equipment Other Than Trucks (Includes Graders)'),
    (94, 'Low Speed Vehicle (LSV)/Neighborhood Electric Vehicle (NEV)'),
    (95, 'Golf Cart'),
    (97, 'Other Vehicle Type (Includes Go-Cart, Fork-Lift, City Street Sweeper, Dune/Swamp Buggy)'),
    (98, 'Not Reported'),
    (99, 'Unknown Body Type');

-- todo: vehicle configuration, cargo body type, bus use, special use, emergency use

create table fars.trailing_vehicle (
    tow_veh int primary key,
    name text
);
insert into fars.trailing_vehicle values
    (0, 'No Trailing Unit'),
    (1, 'Yes, One Trailing Unit'),
    (2, 'Yes, Two Trailing Units'),
    (3, 'Yes, Three or More Trailing Units'),
    (4, 'Yes, Number of Trailing Units Unknown'),
    (5, 'Vehicle Towing another Motor Vehicle – Fixed Linkage'),
    (6, 'Vehicle Towing another Motor Vehicle – Non-Fixed'),
    (9, 'Linkage Unknown');

create table fars.hazardous_material_class (
    haz_cno int primary key,
    name text
);
insert into fars.hazardous_material_class values
    (0, 'Not Applicable'),
    (1, 'Explosives'),
    (2, 'Gases'),
    (3, 'Flammable / Combustible Liquid'),
    (4, 'Flammable Solid, Spontaneously Combustible, and Dangerous When Wet'),
    (5, 'Oxidizer and Organic Peroxide'),
    (6, 'Poison and Poison Inhalation Hazard'),
    (7, 'Radioactive'),
    (8, 'Corrosive'),
    (9, 'Miscellaneous'),
    (88, 'Not Reported');

create table fars.safety_equipment (
    msafeqmt int primary key,
    name text
);
insert into fars.safety_equipment values
    (1, 'None Used'),
    (2, 'Helmet'),
    (3, 'Reflective Clothing (Jacket, Backpack, etc.)'),
    (4, 'Protective Pads (Elbows, Knees, Shins, etc.)'),
    (5, 'Lighting'),
    (7, 'Other Safety Equipment'),
    (8, 'Not Reported'),
    (9, 'Unknown if Used');

create table fars.ped_crash_type (
    pedctype int primary key,
    name text
);
insert into fars.ped_crash_type values
    (0, 'Not a Pedestrian'),
    (120, 'Dispute-Related'),
    (130, 'Pedestrian on Vehicle'),
    (140, 'Vehicle-Vehicle/Object'),
    (150, 'Motor Vehicle Loss of Control'),
    (160, 'Pedestrian Loss of Control'),
    (190, 'Other Unusual Circumstances'),
    (211, 'Backing Vehicle – Non-Trafficway – Driveway'),
    (212, 'Backing Vehicle – Driveway Access'),
    (213, 'Backing Vehicle – Trafficway'),
    (214, 'Backing Vehicle – Non-Trafficway – Parking Lot'),
    (219, 'Backing Vehicle – Other/Unknown'),
    (220, 'Driverless Vehicle'),
    (230, 'Disabled Vehicle-Related'),
    (240, 'Emergency Vehicle-Related'),
    (250, 'Play Vehicle-Related'),
    (311, 'Working in Roadway'),
    (312, 'Playing in Roadway'),
    (313, 'Lying in Roadway'),
    (320, 'Entering/Exiting Parked or Stopped Vehicle'),
    (330, 'Mailbox-Related'),
    (341, 'Transit Bus-Related'),
    (342, 'School Bus Stop-Related'),
    (360, 'Ice Cream/Vendor Truck-Related'),
    (410, 'Walking/Running Along Roadway With Traffic – From Behind'),
    (420, 'Walking/Running Along Roadway With Traffic – From Front'),
    (430, 'Walking/Running Along Roadway Against Traffic – From Behind'),
    (440, 'Walking/Running Along Roadway Against Traffic – From Front'),
    (459, 'Walking/Running Along Roadway – Direction/Position Unknown'),
    (461, 'Motorist Entering Driveway'),
    (465, 'Motorist Exiting Driveway'),
    (469, 'Driveway Access – Other/Unknown'),
    (510, 'Waiting to Cross – Vehicle Turning'),
    (520, 'Waiting to Cross – Vehicle Not Turning'),
    (590, 'Waiting to Cross – Vehicle Action Unknown'),
    (610, 'Standing in Roadway'),
    (620, 'Walking in Roadway'),
    (680, 'Not At Intersection – Other/Unknown'),
    (690, 'At Intersection – Other/Unknown'),
    (710, 'Multiple Threat'),
    (730, 'Trapped'),
    (741, 'Dash'),
    (742, 'Dart-Out'),
    (760, 'Pedestrian Failed to Yield'),
    (770, 'Motorist Failed to Yield'),
    (781, 'Motorist Left Turn – Parallel Paths'),
    (782, 'Motorist Left Turn – Perpendicular Paths'),
    (791, 'Motorist Right Turn – Parallel Paths'),
    (792, 'Motorist Right Turn on Red – Parallel Paths'),
    (794, 'Motorist Right Turn on Red – Perpendicular Paths'),
    (795, 'Motorist Right Turn – Perpendicular Paths'),
    (799, 'Motorist Turn/Merge – Other/Unknown'),
    (830, 'Non-Trafficway – Parking Lot'),
    (890, 'Non-Trafficway – Other/Unknown'),
    (900, 'Other – Unknown Location'),
    (910, 'Crossing an Expressway');

create table fars.bike_crash_type (
    bikectype int primary key,
    name text
);
insert into fars.bike_crash_type values
    (0, 'Not a Cyclist'),
    (111, 'Motorist Turning Error – Left Turn'),
    (112, 'Motorist Turning Error – Right Turn'),
    (113, 'Motorist Turning Error – Other'),
    (114, 'Bicyclist Turning Error – Left Turn'),
    (115, 'Bicyclist Turning Error – Right Turn'),
    (116, 'Bicyclist Turning Error – Other'),
    (121, 'Bicyclist Lost Control – Mechanical Problems'),
    (122, 'Bicyclist Lost Control – Oversteering, Improper Braking, Speed'),
    (123, 'Bicyclist Lost Control – Alcohol/Drug Impairment'),
    (124, 'Bicyclist Lost Control – Surface Conditions'),
    (129, 'Bicyclist Lost Control – Other/Unknown'),
    (131, 'Motorist Lost Control – Mechanical Problems'),
    (132, 'Motorist Lost Control – Oversteering, Improper Braking, Speed'),
    (133, 'Motorist Lost Control – Alcohol/Drug Impairment'),
    (134, 'Motorist Lost Control – Surface Conditions'),
    (139, 'Motorist Lost Control – Other/Unknown'),
    (141, 'Motorist Drive-Out – Sign-Controlled Intersection'),
    (142, 'Bicyclist Ride-Out – Sign-Controlled Intersection'),
    (143, 'Motorist Drive-Through – Sign-Controlled Intersection'),
    (144, 'Bicyclist Ride-Through – Sign-Controlled Intersection'),
    (147, 'Multiple Threat – Sign-Controlled Intersection'),
    (148, 'Sign-Controlled Intersection – Other/Unknown'),
    (151, 'Motorist Drive-Out – Right Turn on Red'),
    (152, 'Motorist Drive-Out – Signalized Intersection'),
    (153, 'Bicyclist – Ride-Out – Signalized Intersection'),
    (154, 'Motorist Drive-Through – Signalized Intersection'),
    (155, 'Bicyclist Ride-Through – Signalized Intersection'),
    (156, 'Bicyclist Failed to Clear – Trapped'),
    (157, 'Bicyclist Failed to Clear – Multiple Threat'),
    (158, 'Signalized Intersection – Other/Unknown'),
    (159, 'Bicyclist Failed to Clear – Unknown'),
    (160, 'Crossing Paths – Uncontrolled Intersection'),
    (180, 'Crossing Paths – Intersection – Other/Unknown'),
    (211, 'Motorist Left Turn – Same Direction'),
    (212, 'Motorist Left Turn – Opposite Direction'),
    (213, 'Motorist Right Turn – Same Direction'),
    (214, 'Motorist Right Turn – Opposite Direction'),
    (215, 'Motorist Drive-In/Out – Parking'),
    (216, 'Bus/Delivery Vehicle Pullover'),
    (217, 'Motorist Right Turn on Red – Same Direction'),
    (218, 'Motorist Right Turn on Red – Opposite Direction'),
    (219, 'Motorist Turn/Merge – Other/Unknown'),
    (221, 'Bicyclist Left Turn – Same Direction'),
    (222, 'Bicyclist Left Turn – Opposite Direction'),
    (223, 'Bicyclist Right Turn – Same Direction'),
    (224, 'Bicyclist Right Turn – Opposite Direction'),
    (225, 'Bicyclist Ride-out – Parallel Path'),
    (231, 'Motorist Overtaking – Undetected Bicyclist'),
    (232, 'Motorist Overtaking – Misjudged Space'),
    (235, 'Motorist Overtaking – Bicyclist Swerved'),
    (239, 'Motorist Overtaking – Other/Unknown'),
    (241, 'Bicyclist Overtaking – Passing on Right'),
    (242, 'Bicyclist Overtaking – Passing on Left'),
    (243, 'Bicyclist Overtaking – Parked Vehicle'),
    (244, 'Bicyclist Overtaking – Extended Door'),
    (249, 'Bicyclist Overtaking – Other/Unknown'),
    (250, 'Wrong-Way/Wrong-Side – Bicyclist'),
    (255, 'Wrong-Way/Wrong-Side – Motorist'),
    (259, 'Wrong-Way/Wrong-Side – Unknown'),
    (280, 'Parallel Paths – Other/Unknown'),
    (311, 'Bicyclist Ride-Out – Residential Driveway'),
    (312, 'Bicyclist Ride-Out – Commercial Driveway'),
    (313, 'Bicyclist Ride-Out – Driveway, Unknown Type'),
    (318, 'Bicyclist Ride-Out – Other Midblock'),
    (319, 'Bicyclist Ride-Out – Unknown'),
    (321, 'Motorist Drive-Out – Residential Driveway'),
    (322, 'Motorist Drive-Out – Commercial Driveway'),
    (323, 'Motorist Drive-Out – Driveway, Unknown Type'),
    (328, 'Motorist Drive-Out – Other Midblock'),
    (329, 'Motorist Drive-Out – Midblock – Unknown'),
    (357, 'Multiple Threat – Midblock'),
    (380, 'Crossing Paths – Midblock – Other/Unknown'),
    (610, 'Backing Vehicle'),
    (700, 'Play Vehicle-Related'),
    (800, 'Unusual Circumstances'),
    (910, 'Non-Trafficway'),
    (970, 'Unknown Approach Paths'),
    (980, 'Unknown Location');

create table fars.related_factors_driver (
    dr_sf integer primary key,
    name text
);
insert into fars.related_factors_driver values
    (0, 'None'),
    (4, 'Reaction to or Failure to Take Drugs/Medication'),
    (6, 'Careless Driving'),
    (8, 'Road Rage/Aggressive Driving'),
    (12, 'Mother of Dead Fetus/Mother of Infant Born Post Crash'),
    (13, 'Mentally Challenged'),
    (15, 'Seat Back Not in Normal Position, Seat Back Reclined'),
    (16, 'Police or Law Enforcement'),
    (18, 'Traveling on Prohibited Trafficways'),
    (19, 'Legally Driving on Suspended or Revoked License'),
    (20, 'Leaving Vehicle Unattended with Engine Running; Leaving Vehicle Unattended in Roadway'),
    (21, 'Overloading or Improper Loading of Vehicle with Passenger or Cargo'),
    (22, 'Towing or Pushing Vehicle Improperly'),
    (23, 'Failing to Dim Lights or to Have Lights on When Required'),
    (24, 'Operating Without Required Equipment'),
    (26, 'Following Improperly'),
    (27, 'Improper or Erratic Lane Changing'),
    (28, 'Improper Lane Usage'),
    (29, 'Intentional Illegal Driving on Road Shoulder, in Ditch, or Sidewalk, or on Median'),
    (30, 'Making Improper Entry to or Exit from Trafficway'),
    (31, 'Starting or Backing Improperly'),
    (32, 'Opening Vehicle Closure into Moving Traffic or Vehicle is in Motion'),
    (33, 'Passing Where Prohibited by Posted Signs, Pavement Markings, or School Bus Displaying Warning Not to Pass'),
    (34, 'Passing on Right Side'),
    (35, 'Passing with Insufficient Distance or Inadequate Visibility or Failing to Yield to Overtaking Vehicle'),
    (36, 'Operating the Vehicle in an Erratic, Reckless, Careless or Negligent Manner'),
    (37, 'Police Pursuing this Driver or Police Officer in Pursuit'),
    (38, 'Failure to Yield Right of Way'),
    (39, 'Failure to Obey Actual Traffic Signs, Traffic Control Devices or Traffic Officers, Failure to Observe Safety Zone Traffic Laws'),
    (40, 'Passing Through or Around Barrier'),
    (41, 'Failure to Observe Warnings or Instructions on Vehicle Displaying Them'),
    (42, 'Failure to Signal Intentions'),
    (45, 'Driving Less Than Posted Maximum'),
    (46, 'Operating at Erratic or Suddenly Changing Speeds'),
    (47, 'Making Right Turn from Left-Turn Lane or Making Left Turn from Right-Turn Lane'),
    (48, 'Making Improper Turn'),
    (50, 'Driving Wrong Way on One-Way Trafficway'),
    (51, 'Driving on Wrong Side of Two-way Trafficway (Intentionally or Unintentionally)'),
    (52, 'Operator Inexperience'),
    (53, 'Unfamiliar With Roadway'),
    (54, 'Stopping in Roadway (Vehicle Not Abandoned)'),
    (58, 'Over Correcting'),
    (59, 'Getting Off/Out of a Vehicle'),
    (73, 'Driver Has Not Complied with Learners Permit or Intermediate Driver License/GDL Restrictions'),
    (74, 'Driver Has Not Complied With Physical or Other Imposed Restrictions'),
    (77, 'Skidding, Swerving, Or Sliding Due to Severe Crosswind'),
    (78, 'Skidding, Swerving, Or Sliding Due to Wind from Passing Truck'),
    (79, 'Skidding, Swerving, Or Sliding Due to Slippery or Loose Surface'),
    (80, 'Skidding, Swerving, Or Sliding Due to Tire Blow-Out or Flat'),
    (81, 'Skidding, Swerving, Or Sliding Due to Debris or Objects in Road'),
    (82, 'Skidding, Swerving, Or Sliding Due to Ruts, Holes, Bumps in Road'),
    (83, 'Skidding, Swerving, Or Sliding Due to Live Animals in Road'),
    (84, 'Skidding, Swerving, Or Sliding Due to Vehicle in Road'),
    (85, 'Skidding, Swerving, Or Sliding Due to Phantom Vehicle'),
    (86, 'Skidding, Swerving, Or Sliding Due to Pedestrian, Pedalcyclist, or Other Non-Motorist in Road'),
    (87, 'Skidding, Swerving, Or Sliding Due to Ice, Water, Snow, Slush, Sand, Dirt, Oil, Wet Leaves on Road'),
    (88, 'Skidding, Swerving, Or Sliding Due to Trailer Fishtailing or Swaying'),
    (89, 'Driver has a Driving Record or Driver’s License from More than One State'),
    (91, 'Non-Traffic Violation Charged (Manslaughter, Homicide or Other Assault Offense Committed Without Malice)'),
    (92, 'Other Non-Moving Traffic Violation'),
    (99, 'Unknown');

create table fars.trafficway (
    vtrafway int primary key,
    name text
);
insert into fars.trafficway values
    (0, 'Non-Trafficway or Driveway Access'),
    (1, 'Two-Way, Not Divided'),
    (2, 'Two-Way, Divided, Unprotected (Painted > 4 Feet)'),
    (3, 'Median Two-Way, Divided, Positive Median Barrier'),
    (4, 'One-Way Trafficway'),
    (5, 'Two-Way, Not Divided With a Continuous Left-Turn Lane'),
    (6, 'Entrance/Exit Ramp'),
    (8, 'Not Reported'),
    (9, 'Unknown');

create table fars.related_factors_person (
    p_sf int primary key,
    name text
);
insert into fars.related_factors_person values
    (0, 'None/Not Applicable-Driver'),
    (5, 'Interfering With Driver'),
    (8, 'Mentally Challenged'),
    (9, 'Construction/Maintenance/Utility Worker, Highway Department, Contractor, Utility Company Personnel, etc'),
    (13, 'Motorized Wheelchair Rider'),
    (18, 'Mother of Dead Fetus/Mother of Infant Born Post Crash'),
    (21, 'Overloading or Improper Loading of Vehicle with Passengers or Cargo'),
    (26, 'Following Improperly'),
    (28, 'Improper Lane Usage'),
    (29, 'Intentional Illegal Driving on Road Shoulder, in Ditch, on Sidewalk, on Median'),
    (32, 'Opening Vehicle Closure into Moving Traffic or While Vehicle is in Motion'),
    (33, 'Passing where Prohibited by Posted Signs, Pavement Markings, or School Bus Displaying Warning not to Pass'),
    (37, 'Traveling on Prohibited Trafficway'),
    (40, 'Passing Through or Around Barrier Positioned to Prohibit or Channel Traffic'),
    (41, 'Failure to Observe Warnings or Instructions on Vehicles Displaying Them'),
    (42, 'Failure to Signal Intentions'),
    (44, 'Driving Too Fast for Conditions or in Excess of Posted Maximum'),
    (45, 'Driving Less Than Posted Maximum'),
    (47, 'Making Right Turn From Left-Turn Lane, Left Turn from Right-Turn Lane'),
    (51, 'Operator Inexperience'),
    (52, 'Unfamiliar with Roadway'),
    (56, 'Non-Driver Flees Scene'),
    (57, 'Improper Tire Pressure'),
    (59, 'Overcorrecting'),
    (60, 'Vision Obscured By Rain, Snow, Fog, Smoke, Sand, Dust'),
    (61, 'Vision Obscured By Reflected Glare, Bright Sunlight, Headlights'),
    (62, 'Vision Obscured By Curve, Hill, or Other Design Features (Including Traffic Signs, Embankment)'),
    (63, 'Vision Obscured By Building, Billboard, Other Structures'),
    (64, 'Vision Obscured By Trees, Crops, Vegetation'),
    (65, 'Vision Obscured By Motor Vehicle (Including Load)'),
    (66, 'Vision Obscured By Parked Vehicle'),
    (67, 'Vision Obscured By Splash or Spray or Passing Vehicle'),
    (68, 'Inadequate Lighting System'),
    (69, 'Vision Obscured By Obstructing Angles on Vehicle'),
    (70, 'Vision Obscured By Mirrors'),
    (72, 'Vision Obscured By Other Visual Obstruction'),
    (73, 'Skidding, Swerving, Or Sliding Due To Severe Crosswind'),
    (74, 'Skidding, Swerving, Or Sliding Due To Wind From Passing Truck'),
    (75, 'Skidding, Swerving, Or Sliding Due To Slippery or Loose Surface'),
    (76, 'Skidding, Swerving, Or Sliding Due To Tire Blow-Out or Flat'),
    (77, 'Skidding, Swerving, Or Sliding Due To Debris or Objects in Road'),
    (78, 'Ruts, Holes, Bumps in Road'),
    (80, 'Vehicle in Road'),
    (81, 'Phantom Vehicle'),
    (82, 'Pedestrian, Pedalcyclist, or Other Non-Motorist'),
    (83, 'Ice, Snow, Slush, Water, Sand, Dirt, Oil, Wet Leaves on Road'),
    (86, 'Emergency Services Personnel'),
    (87, 'Police or Law Enforcement Officer'),
    (88, 'Seat Back Not in Normal Upright Position, Seat Back Reclined'),
    (89, 'Parked Motor Vehicle With Equipment Extending into the Travel Lane'),
    (90, 'Non-Motorist Pushing a Vehicle'),
    (91, 'Portable Electronic Devices'),
    (92, 'Person in Ambulance Treatment Compartment / Non-Motorist Wearing Motorcycle Helmet'),
    (99, 'Unknown');

create table fars.person_type (
    per_typ int PRIMARY KEY,
    name TEXT
);
insert into fars.person_type values
    (1, 'Driver of a Motor Vehicle In-Transport'),
    (2, 'Passenger of a Motor Vehicle In-Transport'),
    (3, 'Occupant of a Motor Vehicle Not In-Transport'),
    (4, 'Occupant of a Non-Motor Vehicle Transport Device'),
    (5, 'Pedestrian'),
    (6, 'Bicyclist'),
    (7, 'Other Pedalcyclist'),
    (8, 'Person on Personal Conveyances'),
    (9, 'Unknown Occupant Type in a Motor Vehicle In-Transport'),
    (10, 'Persons In/On Buildings'),
    (19, 'Unknown Type of Non-Motorist'),
    (88, 'Not Reported');

create table fars.sequence_events (
    soe int primary key,
    name text
);
insert into fars.sequence_events values
    (1, 'Rollover/Overturn'),
    (2, 'Fire/Explosion'),
    (3, 'Immersion or Partial Immersion'),
    (4, 'Gas Inhalation'),
    (5, 'Fell/Jumped from Vehicle'),
    (6, 'Injured in Vehicle (Non-Collision)'),
    (7, 'Other Non-Collision'),
    (8, 'Pedestrian'),
    (9, 'Pedalcyclist'),
    (10, 'Railway Vehicle'),
    (11, 'Live Animal'),
    (12, 'Motor Vehicle in Transport'),
    (14, 'Parked Motor Vehicle'),
    (15, 'Non-Motorist on Personal Conveyance'),
    (16, 'Thrown or Falling Object'),
    (17, 'Boulder'),
    (18, 'Other Object (Not Fixed)'),
    (19, 'Building'),
    (20, 'Impact Attenuator/Crash Cushion'),
    (21, 'Bridge Pier or Support'),
    (23, 'Bridge Rail (Includes Parapet)'),
    (24, 'Guardrail Face'),
    (25, 'Concrete Traffic Barrier'),
    (26, 'Other Traffic Barrier'),
    (30, 'Utility Pole/Light Support'),
    (31, 'Other Post, Other Pole, or Other Support'),
    (32, 'Culvert'),
    (33, 'Curb'),
    (34, 'Ditch'),
    (35, 'Embankment'),
    (38, 'Fence'),
    (39, 'Wall'),
    (40, 'Fire Hydrant'),
    (41, 'Shrubbery'),
    (42, 'Tree (Standing Only)'),
    (43, 'Other Fixed Object'),
    (44, 'Pavement Surface Irregularity (Ruts, Potholes, Grates, etc.)'),
    (45, 'Working Motor Vehicle'),
    (46, 'Traffic Signal Support'),
    (48, 'Snow Bank'),
    (49, 'Ridden Animal or Animal-Drawn Conveyance'),
    (50, 'Bridge Overhead Structure'),
    (51, 'Jackknife (Harmful to This Vehicle)'),
    (52, 'Guardrail End'),
    (53, 'Mail Box'),
    (54, 'Motor Vehicle In-Transport Strikes or is Struck by Cargo, Persons or Objects Set-in-Motion from/by Another Motor Vehicle In-Transport'),
    (55, 'Motor Vehicle in Motion Outside the Trafficway'),
    (57, 'Cable Barrier'),
    (58, 'Ground'),
    (59, 'Traffic Sign Support'),
    (60, 'Cargo/Equipment Loss or Shift (Non-Harmful)'),
    (61, 'Equipment Failure (Blown Tire, Brake Failure, etc.)'),
    (62, 'Separation of Units'),
    (63, 'Ran Off Road – Right'),
    (64, 'Ran Off Road – Left'),
    (65, 'Cross Median'),
    (66, 'Downhill Runaway'),
    (67, 'Vehicle Went Airborne'),
    (68, 'Cross Centerline'),
    (69, 'Re-Entering Highway'),
    (70, 'Jackknife (Non-Harmful)'),
    (71, 'End Departure'),
    (72, 'Cargo/Equipment Loss or Shift (Harmful To This Vehicle)'),
    (73, 'Object That Had Fallen From Motor Vehicle In-Transport'),
    (74, 'Road Vehicle on Rails'),
    (79, 'Ran Off Roadway – Direction Unknown'),
    (99, 'Unknown');

create table fars.area_of_impact (
    aoi int primary key,
    name text
);
insert into fars.area_of_impact values
    (0, 'Non-Collision'),
    (1, 'One O''Clock'),
    (2, 'Two O''Clock'),
    (3, 'Three O''Clock'),
    (4, 'Four O''Clock'),
    (5, 'Five O''Clock'),
    (6, 'Six O''Clock'),
    (7, 'Seven O''Clock'),
    (8, 'Eight O''Clock'),
    (9, 'Nine O''Clock'),
    (10, 'Ten O''Clock'),
    (11, 'Eleven O''Clock'),
    (12, 'Twelve O''Clock'),
    (13, 'Top'),
    (14, 'Undercarriage'),
    (18, 'Cargo/Vehicle Parts Set-In-Motion'),
    (19, 'Other Objects Set-In-Motion'),
    (55, 'Non-Harmful Event'),
    (61, 'Left'),
    (62, 'Left-Front Size'),
    (63, 'Left-Back Side'),
    (77, 'Not a Motor Vehicle'),
    (81, 'Right'),
    (82, 'Right-Front Side'),
    (83, 'Right-Back Side'),
    (98, 'Not Reported'),
    (99, 'Unknown');

create table fars.driver_distracted (
    mdrdstrd int primary key,
    name text
);
insert into fars.driver_distracted values
    (0, 'Not Distracted'),
    (1, 'Looked But Did Not See'),
    (3, 'By Other Occupant(s)'),
    (4, 'By a Moving Object in Vehicle'),
    (5, 'While Talking or Listening to Cellular Phone'),
    (6, 'While Manipulating Cellular Phone'),
    (7, 'While Adjusting Audio or Climate Controls'),
    (9, 'While Using Other Component/Controls Integral to Vehicle'),
    (10, 'While Using or Reaching For Device/Object Brought Into Vehicle'),
    (12, 'Distracted by Outside Person, Object or Event'),
    (13, 'Eating or Drinking'),
    (14, 'Smoking Related'),
    (15, 'Other Cellular Phone Related'),
    (16, 'No Driver Present/Unknown if Driver Present'),
    (17, 'Distraction/Inattention'),
    (18, 'Distraction/Careless'),
    (19, 'Careless/Inattentive'),
    (92, 'Distraction (Distracted), Details Unknown'),
    (93, 'Inattention (Inattentive), Details Unknown'),
    (96, 'Not Reported'),
    (97, 'Lost In Thought/Day Dreaming'),
    (98, 'Other Distraction'),
    (99, 'Unknown if Distracted');

create table fars.driver_impairment (
    drimpair int primary key,
    name text
);
insert into fars.driver_impairment values
    (0, 'None/Apparently Normal'),
    (1, 'Ill, Blackout'),
    (2, 'Asleep or Fatigued'),
    (3, 'Walking with a Cane or Crutches, etc.'),
    (4, 'Paraplegic or Restricted to Wheelchair'),
    (5, 'Impaired Due to Previous Injury'),
    (6, 'Deaf'),
    (7, 'Blind'),
    (8, 'Emotional (Depressed, Angry, Disturbed, etc.)'),
    (9, 'Under the Influence of Alcohol, Drugs or Medication'),
    (10, 'Physical Impairment – No Details'),
    (95, 'No Driver Present/Unknown if Driver Present'),
    (96, 'Other Physical Impairment'),
    (98, 'Not Reported'),
    (99, 'Unknown if Impaired');

create table fars.motor_vehicle_factor (
    mfactor int primary key,
    name text
);
insert into fars.motor_vehicle_factor values
    (0, 'None'),
    (1, 'Tires'),
    (2, 'Brake System'),
    (3, 'Steering'),
    (4, 'Suspension'),
    (5, 'Power Train'),
    (6, 'Exhaust System'),
    (7, 'Head Lights'),
    (8, 'Signal Lights'),
    (9, 'Other Lights'),
    (10, 'Wipers'),
    (11, 'Wheels'),
    (12, 'Mirrors'),
    (13, 'Windows/Windshield'),
    (14, 'Body, Doors'),
    (15, 'Truck Coupling / Trailer Hitch / Safety Chains'),
    (16, 'Safety Systems'),
    (17, 'Vehicle Contributing Factors – No Details'),
    (97, 'Other'),
    (98, 'Not Reported'),
    (99, 'Unknown');

create table fars.driver_maneuver (
    mdrmanav int primary key,
    name text
);
insert into fars.driver_maneuver values
    (0, 'Driver Did Not Maneuver To Avoid'),
    (1, 'Object'),
    (2, 'Poor Road Conditions (Puddle, Ice, Pothole, etc.)'),
    (3, 'Live Animal'),
    (4, 'Motor Vehicle'),
    (5, 'Pedestrian, Pedalcyclist or Other Non-Motorist'),
    (92, 'Phantom/Non-Contact Motor Vehicle'),
    (95, 'No Driver Present/Unknown if Driver Present'),
    (98, 'Not Reported'),
    (99, 'Unknown');

create table fars.vision_obscured (
    mvisobsc int primary key,
    name text
);
insert into fars.vision_obscured values
    (0, 'No Obstruction Noted'),
    (1, 'Rain, Snow, Fog, Smoke, Sand, Dust'),
    (2, 'Reflected Glare, Bright Sunlight, Headlights'),
    (3, 'Curve, Hill, or Other Roadway Design Features'),
    (4, 'Building, Billboard, or Other Structure'),
    (5, 'Trees, Crops, Vegetation'),
    (6, 'In-Transport Motor Vehicle (Including Load)'),
    (7, 'Not-in-Transport Motor Vehicle (Parked, Working)'),
    (8, 'Splash or Spray of Passing Vehicle'),
    (9, 'Inadequate Defrost or Defog System'),
    (10, 'Inadequate Vehicle Lighting System'),
    (11, 'Obstructing Interior to the Vehicle'),
    (12, 'External Mirrors'),
    (13, 'Broken or Improperly Cleaned Windshield'),
    (14, 'Obstructing Angles on Vehicle'),
    (95, 'No Driver Present/Unknown if Driver Present'),
    (97, 'Vision Obscured – No Details'),
    (98, 'Other Visual Obstruction'),
    (99, 'Unknown');

create table fars.violations_charged (
    mviolatn int primary key,
    name text
);
insert into fars.violations_charged values
    (0, 'None'),
    -- RECKLESS/CARELESS/HIT-AND-RUN OFFENSES
    (1, 'RECKLESS/CARELESS/HIT-AND-RUN: Manslaughter or Homicide'),
    (2, 'RECKLESS/CARELESS/HIT-AND-RUN: Willful Reckless Driving; Driving to Endanger; Negligent Driving'),
    (3, 'RECKLESS/CARELESS/HIT-AND-RUN: Unsafe Reckless (Not Willful, Wanton Reckless) Driving'),
    (4, 'RECKLESS/CARELESS/HIT-AND-RUN: Inattentive, Careless, Improper Driving'),
    (5, 'RECKLESS/CARELESS/HIT-AND-RUN: Fleeing or Eluding Police'),
    (6, 'RECKLESS/CARELESS/HIT-AND-RUN: Fail to Obey Police, Fireman, Authorized Person Directing Traffic'),
    (7, 'RECKLESS/CARELESS/HIT-AND-RUN: Hit-and-Run, Fail to Stop After Crash'),
    (8, 'RECKLESS/CARELESS/HIT-AND-RUN: Fail to Give Aid, Information, Wait for Police after Crash'),
    (9, 'RECKLESS/CARELESS/HIT-AND-RUN: Serious Violation Resulting in Death'),
    (10, 'RECKLESS/CARELESS/HIT-AND-RUN: Use of Telecommunications Device'),
    -- IMPAIRMENT OFFENSES
    (11, 'IMPAIRMENT: Driving While Intoxicated (Alcohol or Drugs) or BAC above Limit (Any Detectable BAC for CDLs)'),
    (12, 'IMPAIRMENT: Driving While Impaired'),
    (13, 'IMPAIRMENT: Driving under Influence of Substance not intended to intoxicate'),
    (14, 'IMPAIRMENT: Drinking While Operating'),
    (15, 'IMPAIRMENT: Illegal Possession of Alcohol or Drugs'),
    (16, 'IMPAIRMENT: Driving With Detectable Alcohol'),
    (18, 'IMPAIRMENT: Refusal to Submit to Chemical Test'),
    (19, 'IMPAIRMENT: Alcohol, Drug, or Impairment Violations Generally'),
    -- SPEED-RELATED OFFENSES
    (21, 'SPEED-RELATED: Racing'),
    (22, 'SPEED-RELATED: Speeding (Above the Speed Limit)'),
    (23, 'SPEED-RELATED: Speed Greater Than Reasonable and Prudent (Not Necessarily Over the Limit)'),
    (24, 'SPEED-RELATED: Exceeding Special Speed Limit (e.g., for Trucks, Buses, Cycles, or on Bridge, in School Zone, etc.)'),
    (25, 'SPEED-RELATED: Energy Speed (Exceeding 55 mph, Non-Pointable)'),
    (26, 'SPEED-RELATED: Driving Too Slowly'),
    (29, 'SPEED-RELATED: Speed-Related Violations Generally'),
    -- RULES OF THE ROAD – TRAFFIC SIGN & SIGNALS
    (31, 'TRAFFIC SIGN & SIGNALS: Fail to Stop for Red Signal'),
    (32, 'TRAFFIC SIGN & SIGNALS: Fail to Stop for Flashing Red'),
    (33, 'TRAFFIC SIGN & SIGNALS: Violation of Turn on Red (Fail to Stop & Yield, Yield to Pedestrians before Turning)'),
    (34, 'TRAFFIC SIGN & SIGNALS: Fail to Obey Flashing Signal (Yellow or Red)'),
    (35, 'TRAFFIC SIGN & SIGNALS: Fail to Obey Signal Generally'),
    (36, 'TRAFFIC SIGN & SIGNALS: Violate RR Grade Crossing Device/Regulations'),
    (37, 'TRAFFIC SIGN & SIGNALS: Fail to Obey Stop Sign'),
    (38, 'TRAFFIC SIGN & SIGNALS: Fail to Obey Yield Sign'),
    (39, 'TRAFFIC SIGN & SIGNALS: Fail to Obey Traffic Control Device Generally'),
    -- RULES OF THE ROAD – TURNING, YIELDING, SIGNALING
    (41, 'TURNING, YIELDING, SIGNALING: Turn in Violation of Traffic Control (Disobey Signs, Turn Arrow or Pavement Markings; this is not a Right-on-Red violation)'),
    (42, 'TURNING, YIELDING, SIGNALING: Improper Method & Position of Turn (Too Wide, Wrong Lane)'),
    (43, 'TURNING, YIELDING, SIGNALING: Fail to Signal for Turn or Stop'),
    (45, 'TURNING, YIELDING, SIGNALING: Fail to Yield to Emergency Vehicle'),
    (46, 'TURNING, YIELDING, SIGNALING: Fail to Yield Generally'),
    (48, 'TURNING, YIELDING, SIGNALING: Enter Intersection When Space Insufficient'),
    (49, 'TURNING, YIELDING, SIGNALING: Turn, Yield, Signaling Violations Generally'),
    -- RULES OF THE ROAD – WRONG SIDE, PASSING & FOLLOWING
    (51, 'WRONG SIDE, PASSING & FOLLOWING: Driving Wrong Way on One-Way Road'),
    (52, 'WRONG SIDE, PASSING & FOLLOWING: Driving on Left, Wrong Side of Road Generally'),
    (53, 'WRONG SIDE, PASSING & FOLLOWING: Improper, Unsafe Passing'),
    (54, 'WRONG SIDE, PASSING & FOLLOWING: Pass on Right (Drive off Pavement to Pass)'),
    (55, 'WRONG SIDE, PASSING & FOLLOWING: Pass Stopped School Bus'),
    (56, 'WRONG SIDE, PASSING & FOLLOWING: Fail to Give Way When Overtaken'),
    (58, 'WRONG SIDE, PASSING & FOLLOWING: Following Too Closely'),
    (59, 'WRONG SIDE, PASSING & FOLLOWING: Wrong Side, Passing, Following Violations Generally'),
    -- RULES OF THE ROAD – LANE USAGE
    (61, 'LANE USAGE: Unsafe or Prohibited Lane Change'),
    (62, 'LANE USAGE: Improper Use of Lane (Enter of 3-Lane Road, HOV Designated Lane)'),
    (63, 'LANE USAGE: Certain Traffic to Use Right Lane (Trucks, Slow Moving, etc.)'),
    (66, 'LANE USAGE: Motorcycle Lane Violations (More than two per Lane, Riding Between Lanes, etc.)'),
    (67, 'LANE USAGE: Motorcyclist Attached to another Vehicle'),
    (69, 'LANE USAGE: Lane Violations Generally'),
    -- NON-MOVING – LICENSE & REGISTRATION VIOLATIONS
    (71, 'LICENSE & REGISTRATION: Driving While License Withdrawn'),
    (72, 'LICENSE & REGISTRATION: Other Driver License Violations'),
    (73, 'LICENSE & REGISTRATION: Commercial Driver Violations'),
    (74, 'LICENSE & REGISTRATION: Vehicle Registration Violations'),
    (75, 'LICENSE & REGISTRATION: Fail to Carry Insurance Card'),
    (76, 'LICENSE & REGISTRATION: Driving Uninsured Vehicle'),
    (79, 'LICENSE & REGISTRATION: Non-Moving Violations Generally'),
    -- EQUIPMENT
    (81, 'EQUIPMENT: Lamp Violations'),
    (82, 'EQUIPMENT: Brake Violations'),
    (83, 'EQUIPMENT: Failure to Require Restraint Use (By Self or Passenger)'),
    (84, 'EQUIPMENT: Motorcycle Equipment Violations (Helmet, Special Equipment)'),
    (85, 'EQUIPMENT: Violation of Hazardous Cargo Regulations'),
    (86, 'EQUIPMENT: Size, Weight, Load Violations'),
    (89, 'EQUIPMENT: Equipment Violations Generally'),
    -- LICENSE, REGISTRATION & OTHER VIOLATIONS
    (91, 'LICENSE, REGISTRATION & OTHER: Parking'),
    (92, 'LICENSE, REGISTRATION & OTHER: Theft, Unauthorized Use of Motor Vehicle'),
    (93, 'LICENSE, REGISTRATION & OTHER: Driving Where Prohibited (Sidewalk, Limited Access, Off Truck Route)'),
    (95, 'LICENSE, REGISTRATION & OTHER: No Driver Present/Unknown if Driver Present'),
    (97, 'LICENSE, REGISTRATION & OTHER: Not Reported'),
    (98, 'LICENSE, REGISTRATION & OTHER: Other Moving Violation'),
    (99, 'LICENSE, REGISTRATION & OTHER: Unknown Violation(s)');

CREATE TABLE fars.accident (
    state integer references fars.state (state),
    st_case integer PRIMARY KEY,
    ve_total integer,
    ve_forms integer,
    pvh_invl integer,
    peds integer,
    pernotmvit integer,
    permvit integer,
    persons integer,
    county integer,
    city integer,
    day integer,
    month integer,
    year integer,
    day_week integer,
    hour integer,
    minute integer,
    nhs integer,
    rur_urb integer,
    func_sys integer references fars.functional_system (func_sys),
    rd_owner integer references fars.road_owner (rd_owner),
    route integer references fars.route (route),
    tway_id text,
    tway_id2 text,
    milept integer,
    latitude double precision,
    longitud double precision,
    sp_jur integer references fars.special_jurisdiction (sp_jur),
    harm_ev integer references fars.harmful_event (harm_ev),
    man_coll integer references fars.manner_of_collision (man_coll),
    reljct1 integer,
    reljct2 integer,
    typ_int integer,
    wrk_zone integer,
    rel_road integer,
    lgt_cond integer references fars.light_condition (lgt_cond),
    weather1 integer references fars.atmospheric_condition (weather),
    weather2 integer references fars.atmospheric_condition (weather),
    weather integer references fars.atmospheric_condition (weather),
    sch_bus integer,
    rail text,
    not_hour integer,
    not_min integer,
    arr_hour integer,
    arr_min integer,
    hosp_hr integer,
    hosp_mn integer,
    cf1 integer references fars.related_factors_crash (cf),
    cf2 integer references fars.related_factors_crash (cf),
    cf3 integer references fars.related_factors_crash (cf),
    fatals integer,
    drunk_dr integer
);

CREATE TABLE fars.cevent (
    state integer references fars.state (state),
    st_case integer,
    eventnum integer,
    vnumber1 integer,
    aoi1 integer references fars.area_of_impact (aoi),
    soe integer references fars.sequence_events (soe),
    vnumber2 integer,
    aoi2 integer references fars.area_of_impact (aoi),
    constraint fars_cevent_pk primary key (st_case, eventnum)
);

CREATE TABLE fars.damage (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    mdareas integer
);
create index on fars.damage (st_case, veh_no);

CREATE TABLE fars.distract (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    mdrdstrd integer references fars.driver_distracted (mdrdstrd)
);
create index on fars.distract (st_case, veh_no);

CREATE TABLE fars.drimpair (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    drimpair integer references fars.driver_impairment (drimpair)
);
create index on fars.drimpair (st_case, veh_no);

CREATE TABLE fars.factor (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    mfactor integer references fars.motor_vehicle_factor (mfactor)
);
create index on fars.factor (st_case, veh_no);

CREATE TABLE fars.maneuver (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    mdrmanav integer references fars.driver_maneuver (mdrmanav)
);
create index on fars.maneuver (st_case, veh_no);

CREATE TABLE fars.nmcrash (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    per_no integer,
    mtm_crsh integer
);
create index on fars.nmcrash (st_case, veh_no, per_no);

CREATE TABLE fars.nmimpair (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    per_no integer,
    nmimpair integer
);
create index on fars.nmimpair (st_case, veh_no, per_no);

CREATE TABLE fars.nmprior (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    per_no integer,
    mpr_act integer
);
create index on fars.nmprior (st_case, veh_no, per_no);

CREATE TABLE fars.parkwork (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    pve_forms integer,
    pnumoccs integer,
    pday integer,
    pmonth integer,
    phour integer,
    pminute integer,
    pharm_ev integer,
    pman_coll integer references fars.manner_of_collision (man_coll),
    ptype integer,
    phit_run integer,
    preg_stat integer,
    powner integer references fars.vehicle_owner (owner),
    pmake integer references fars.vehicle_make (make),
    pmodel integer,
    pmak_mod integer,
    pbodytyp integer,
    pmodyear integer,
    pvin text,
    pvin_1 text,
    pvin_2 text,
    pvin_3 text,
    pvin_4 text,
    pvin_5 text,
    pvin_6 text,
    pvin_7 text,
    pvin_8 text,
    pvin_9 text,
    pvin_10 text,
    pvin_11 text,
    pvin_12 text,
    ptrailer integer,
    pmcarr_i1 text,
    pmcarr_i2 text,
    pmcarr_id text,
    pgvwr integer,
    pv_config integer,
    pcargtyp integer,
    phaz_inv integer,
    phazplac integer,
    phaz_id integer,
    phaz_cno integer references fars.hazardous_material_class (haz_cno),
    phaz_rel integer,
    pbus_use integer,
    psp_use integer,
    pem_use integer,
    punderide integer,
    pimpact1 integer,
    pveh_sev integer,
    ptowed integer,
    pm_harm integer references fars.harmful_event (harm_ev),
    pveh_sc1 integer,
    pveh_sc2 integer,
    pfire integer,
    pdeaths integer,
    ptrlr1vin text,
    ptrlr2vin text,
    ptrlr3vin text,
    constraint fars_parkwork_pk primary key (st_case, veh_no)
);

CREATE TABLE fars.pbtype (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    per_no integer,
    pbptype integer references fars.person_type (per_typ),
    pbage integer,
    pbsex integer,
    pbcwalk integer,
    pbswalk integer,
    pbszone integer,
    pedctype integer references fars.ped_crash_type (pedctype),
    bikectype integer references fars.bike_crash_type (bikectype),
    pedloc integer,
    bikeloc integer,
    pedpos integer,
    bikepos integer,
    peddir integer,
    bikedir integer,
    motdir integer,
    motman integer,
    pedleg integer,
    pedsnr text,
    pedcgp integer,
    bikecgp integer,
    constraint fars_pbtype_pk primary key (st_case, per_no)
);

CREATE TABLE fars.person (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    ve_forms integer,
    veh_no integer,
    per_no integer,
    str_veh integer,
    county integer,
    day integer,
    month integer,
    hour integer,
    minute integer,
    rur_urb integer,
    func_sys integer,
    harm_ev integer,
    man_coll integer,
    sch_bus integer,
    make integer references fars.vehicle_make (make),
    mak_mod integer,
    body_typ integer references fars.body_type (body_typ),
    mod_year integer,
    tow_veh integer references fars.trailing_vehicle (tow_veh),
    spec_use integer,
    emer_use integer,
    rollover integer,
    impact1 integer,
    fire_exp integer,
    age integer,
    sex integer,
    per_typ integer references fars.person_type (per_typ),
    inj_sev integer,
    seat_pos integer,
    rest_use integer,
    rest_mis integer,
    air_bag integer,
    ejection integer,
    ej_path integer,
    extricat integer,
    drinking integer,
    alc_det integer,
    alc_status integer,
    atst_typ integer,
    alc_res integer,
    drugs integer,
    drug_det integer,
    dstatus integer,
    drugtst1 integer,
    drugtst2 integer,
    drugtst3 integer,
    drugres1 integer,
    drugres2 integer,
    drugres3 integer,
    hospital integer,
    doa integer,
    death_da integer,
    death_mo integer,
    death_yr integer,
    death_hr integer,
    death_mn integer,
    death_tm integer,
    lag_hrs integer,
    lag_mins integer,
    p_sf1 integer references fars.related_factors_person (p_sf),
    p_sf2 integer references fars.related_factors_person (p_sf),
    p_sf3 integer references fars.related_factors_person (p_sf),
    work_inj integer,
    hispanic integer,
    race integer,
    location integer,
    constraint fars_person_pk primary key (st_case, veh_no, per_no)
);

CREATE TABLE fars.safetyeq (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    per_no integer,
    msafeqmt integer references fars.safety_equipment (msafeqmt)
);
create index on fars.safetyeq (st_case, veh_no, per_no);

CREATE TABLE fars.vehicle (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    ve_forms integer,
    numoccs integer,
    day integer,
    month integer,
    hour integer,
    minute integer,
    harm_ev integer,
    man_coll integer,
    unittype integer,
    hit_run integer,
    reg_stat integer,
    owner integer references fars.vehicle_owner (owner),
    make integer references fars.vehicle_make (make),
    model integer,
    mak_mod integer,
    body_typ integer references fars.body_type (body_typ),
    mod_year integer,
    vin text,
    vin_1 text,
    vin_2 text,
    vin_3 text,
    vin_4 text,
    vin_5 text,
    vin_6 text,
    vin_7 text,
    vin_8 text,
    vin_9 text,
    vin_10 text,
    vin_11 text,
    vin_12 text,
    tow_veh integer references fars.trailing_vehicle (tow_veh),
    j_knife integer,
    mcarr_i1 integer,
    mcarr_i2 text,
    mcarr_id text,
    gvwr integer,
    v_config integer,
    cargo_bt integer,
    haz_inv integer,
    haz_plac integer,
    haz_id integer,
    haz_cno integer references fars.hazardous_material_class (haz_cno),
    haz_rel integer,
    bus_use integer,
    spec_use integer,
    emer_use integer,
    trav_sp integer,
    underide integer,
    rollover integer,
    rolinloc integer,
    impact1 integer,
    deformed integer,
    towed integer,
    m_harm integer references fars.harmful_event (harm_ev),
    veh_sc1 integer,
    veh_sc2 integer,
    fire_exp integer,
    dr_pres integer,
    l_state integer references fars.state (state),
    dr_zip text,
    l_status integer,
    l_type integer,
    cdl_stat integer,
    l_endors integer,
    l_compl integer,
    l_restri integer,
    dr_hgt integer,
    dr_wgt integer,
    prev_acc integer,
    prev_sus integer,
    prev_dwi integer,
    prev_spd integer,
    prev_oth integer,
    first_mo integer,
    first_yr integer,
    last_mo integer,
    last_yr integer,
    speedrel integer,
    dr_sf1 integer references fars.related_factors_driver (dr_sf),
    dr_sf2 integer references fars.related_factors_driver (dr_sf),
    dr_sf3 integer references fars.related_factors_driver (dr_sf),
    dr_sf4 integer references fars.related_factors_driver (dr_sf),
    vtrafway integer references fars.trafficway (vtrafway),
    vnum_lan integer,
    vspd_lim integer,
    valign integer,
    vprofile integer,
    vpavetyp integer,
    vsurcond integer,
    vtrafcon integer,
    vtcont_f integer,
    p_crash1 integer,
    p_crash2 integer,
    p_crash3 integer,
    pcrash4 integer,
    pcrash5 integer,
    acc_type integer,
    trlr1vin text,
    trlr2vin text,
    trlr3vin text,
    deaths integer,
    dr_drink integer,
    constraint fars_vehicle_pk primary key (st_case, veh_no)
);

CREATE TABLE fars.vevent (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    eventnum integer,
    veh_no integer,
    veventnum integer,
    vnumber1 integer,
    aoi1 integer references fars.area_of_impact (aoi),
    soe integer references fars.sequence_events (soe),
    vnumber2 integer,
    aoi2 integer references fars.area_of_impact (aoi),
    constraint fars_vevent_pk primary key (st_case, veh_no, eventnum)
);

CREATE TABLE fars.vindecode (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    ncicmake text,
    vinyear integer,
    vehtype text,
    vehtype_t text,
    vinmake_t text,
    vinmodel_t text,
    vintrim_t text,
    vintrim1_t text,
    vintrim2_t text,
    vintrim3_t text,
    vintrim4_t text,
    bodystyl text,
    bodystyl_t text,
    doors integer,
    wheels integer,
    drivwhls integer,
    mfg text,
    mfg_t text,
    displci integer,
    displcc integer,
    cylndrs text,
    cycles integer,
    fuel text,
    fuel_t text,
    fuelinj text,
    fuelinj_t text,
    carbtype text,
    carbtype_t text,
    carbbrls text,
    gvwrange integer,
    gvwrange_t text,
    whlbsh double precision,
    whlblg double precision,
    tiredesc_f text,
    psi_f integer,
    tiresz_f text,
    tiresz_f_t text,
    tiredesc_r text,
    psi_r integer,
    rearsize integer,
    rearsize_t text,
    tonrating text,
    shipweight integer,
    msrp integer,
    drivetyp text,
    drivetyp_t text,
    salectry text,
    salectry_t text,
    abs text,
    abs_t text,
    security text,
    security_t text,
    drl text,
    drl_t text,
    rstrnt text,
    rstrnt_t text,
    tkcab text,
    tkcab_t text,
    tkaxlef text,
    tkaxlef_t text,
    tkaxler text,
    tkaxler_t text,
    tkbrak text,
    tkbrak_t text,
    engmfg text,
    engmfg_t text,
    engmodel text,
    tkduty text,
    tkduty_t text,
    tkbedl text,
    tkbedl_t text,
    segmnt text,
    segmnt_t text,
    plant text,
    plntctry_t text,
    plntcity text,
    plntctry text,
    plntstat text,
    plntstat_t text,
    origin text,
    origin_t text,
    dispclmt double precision,
    blocktype text,
    enghead text,
    enghead_t text,
    vlvclndr integer,
    vlvtotal integer,
    engvincd text,
    incomplt boolean,
    battyp text,
    battyp_t text,
    batkwrtg text,
    batvolt double precision,
    supchrgr text,
    supchrgr_t text,
    turbo text,
    turbo_t text,
    engvvt text,
    mcyusage text,
    mcyusage_t text,
    constraint fars_vindecode_pk primary key (st_case, veh_no)
);

CREATE TABLE fars.violatn (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    mviolatn integer references violations_charged (mviolatn)
);
create index on fars.violatn (st_case, veh_no);

CREATE TABLE fars.vision (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    mvisobsc integer references fars.vision_obscured (mvisobsc)
);
create index on fars.vision (st_case, veh_no);

CREATE TABLE fars.vsoe (
    state integer references fars.state (state),
    st_case integer references fars.accident (st_case),
    veh_no integer,
    veventnum integer,
    soe integer,
    aoi integer,
    constraint fars_vsoe_pk primary key (st_case, veh_no, veventnum)
);
